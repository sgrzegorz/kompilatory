
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocASSIGNADDASSIGNMINASSIGNMULASSIGNDIVASSIGNRELASSIGNleftADDMINDOTADDDOTMINleftMULDIVDOTMULDOTDIVleftLTGTLTEGTENEleft(){}nonassocTRANSPOSErightUMINUSADD ADDASSIGN ASSIGN BREAK COM CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMIN DOTMUL ELSE EYE FLOAT FOR GT GTE ID IF IGN INT LT LTE MIN MINASSIGN MUL MULASSIGN NE NL ONES PRINT RELASSIGN RETURN STR TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instruction\n                    | instruction block : '{' instructions '}' instruction : block\n                    | if\n                    | for\n                    | while\n                    | break ';'\n                    | continue ';'\n                    | return ';'\n                    | print ';'\n                    | assign ';'if : IF BOOLEAN_IN_PARENTHESES instruction %prec IFX\n          | IF BOOLEAN_IN_PARENTHESES instruction ELSE instructionfor :  FOR ID ASSIGN RANGE instruction RANGE : EXPRESSION ':' EXPRESSIONwhile : WHILE BOOLEAN_IN_PARENTHESES instruction break : BREAK continue : CONTINUE return : RETURN\n              | RETURN EXPRESSION\n              | RETURN BOOLEAN_EXPRESSIONprint : PRINT PRINT_EXPR assign : ID ASSIGN EXPRESSION\n              | ID ADDASSIGN EXPRESSION\n              | ID MINASSIGN EXPRESSION\n              | ID MULASSIGN EXPRESSION\n              | ID DIVASSIGN EXPRESSION assign : ID '[' INT  ',' INT ']' ASSIGN EXPRESSIONBOOLEAN_EXPRESSION : EXPRESSION LT EXPRESSION\n                          | EXPRESSION GT EXPRESSION\n                          | EXPRESSION LTE EXPRESSION\n                          | EXPRESSION GTE EXPRESSION\n                          | EXPRESSION NE EXPRESSION\n                          | EXPRESSION RELASSIGN EXPRESSIONEXPRESSION : EXPRESSION ADD EXPRESSION\n                  | EXPRESSION MIN EXPRESSION\n                  | EXPRESSION MUL EXPRESSION\n                  | EXPRESSION DIV EXPRESSIONEXPRESSION : EXPRESSION DOTADD EXPRESSION\n                  | EXPRESSION DOTMIN EXPRESSION\n                  | EXPRESSION DOTMUL EXPRESSION\n                  | EXPRESSION DOTDIV EXPRESSIONEXPRESSION : MIN EXPRESSION %prec UMINUSEXPRESSION : EXPRESSION TRANSPOSEEXPRESSION : CONSTANT_EXPRESSIONCONSTANT_EXPRESSION : MATRIX\n                | MATRIX_EXPRESSION\n                | NUMBERCONSTANT_EXPRESSION : STRCONSTANT_EXPRESSION : IDNUMBER : INT\n              | FLOATMATRIX : '[' ROWS ']' ROWS : ROWS ';' ROW\n             | ROW ROW : ROW ',' NUMBER\n            | NUMBERMATRIX_EXPRESSION : EYE '(' MULTIPLE_EXPR ')'\n                         | ZEROS '(' MULTIPLE_EXPR ')'\n                         | ONES '(' MULTIPLE_EXPR ')'BOOLEAN_IN_PARENTHESES : '(' BOOLEAN_EXPRESSION ')'MULTIPLE_EXPR : MULTIPLE_EXPR ',' CONSTANT_EXPRESSION\n                  | CONSTANT_EXPRESSIONPRINT_EXPR : MULTIPLE_EXPR"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,23,24,25,26,27,28,58,59,69,119,120,],[-3,0,-1,-2,-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,-6,-16,-20,-17,-18,]),'{':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[14,14,-5,-7,-8,-9,-10,14,-4,-11,-12,-13,-14,-15,14,14,14,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,14,-65,14,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'IF':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[15,15,-5,-7,-8,-9,-10,15,-4,-11,-12,-13,-14,-15,15,15,15,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,15,-65,15,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'FOR':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[16,16,-5,-7,-8,-9,-10,16,-4,-11,-12,-13,-14,-15,16,16,16,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,16,-65,16,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'WHILE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[18,18,-5,-7,-8,-9,-10,18,-4,-11,-12,-13,-14,-15,18,18,18,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,18,-65,18,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'BREAK':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[19,19,-5,-7,-8,-9,-10,19,-4,-11,-12,-13,-14,-15,19,19,19,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,19,-65,19,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'CONTINUE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[20,20,-5,-7,-8,-9,-10,20,-4,-11,-12,-13,-14,-15,20,20,20,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,20,-65,20,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'RETURN':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[21,21,-5,-7,-8,-9,-10,21,-4,-11,-12,-13,-14,-15,21,21,21,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,21,-65,21,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'PRINT':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,58,59,69,78,85,93,94,95,98,99,100,101,102,103,104,105,112,119,120,125,126,127,128,],[22,22,-5,-7,-8,-9,-10,22,-4,-11,-12,-13,-14,-15,22,22,22,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,-20,-48,-47,22,-65,22,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,-62,-63,-64,-19,]),'ID':([0,3,4,5,6,7,8,14,16,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,42,43,44,45,46,47,48,53,54,58,59,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,112,119,120,121,125,126,127,128,130,],[17,17,-5,-7,-8,-9,-10,17,32,48,48,-4,-11,-12,-13,-14,-15,17,17,48,48,48,48,48,48,17,48,-49,-50,-51,-52,-53,-54,-55,-56,-6,-16,48,-20,48,48,48,48,48,48,48,48,-48,48,48,48,48,48,48,-47,48,48,48,48,17,-65,17,-39,-40,-41,-42,-43,-44,-45,-46,-57,-17,-18,48,-62,-63,-64,-19,48,]),'}':([4,5,6,7,8,23,24,25,26,27,28,29,58,59,69,119,120,],[-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,58,-6,-16,-20,-17,-18,]),'ELSE':([5,6,7,8,24,25,26,27,28,58,59,69,119,120,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-6,93,-20,-17,-18,]),';':([9,10,11,12,13,19,20,21,40,41,43,44,45,46,47,48,53,54,55,56,57,63,64,65,66,67,78,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,118,123,124,125,126,127,131,],[24,25,26,27,28,-21,-22,-23,-24,-25,-49,-50,-51,-52,-53,-54,-55,-56,-26,-68,-67,-27,-28,-29,-30,-31,-48,-47,113,-59,-61,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-57,-66,-58,-60,-62,-63,-64,-32,]),'(':([15,18,50,51,52,],[31,31,89,90,91,]),'ASSIGN':([17,32,129,],[33,62,130,]),'ADDASSIGN':([17,],[34,]),'MINASSIGN':([17,],[35,]),'MULASSIGN':([17,],[36,]),'DIVASSIGN':([17,],[37,]),'[':([17,21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[38,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MIN':([21,31,33,34,35,36,37,40,42,43,44,45,46,47,48,53,54,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,121,125,126,127,128,130,131,],[42,42,42,42,42,42,42,71,42,-49,-50,-51,-52,-53,-54,-55,-56,71,42,71,71,71,71,71,42,42,42,42,42,42,42,42,-48,42,42,42,42,42,42,-47,71,-39,-40,-41,-42,-43,-44,-45,-46,71,71,71,71,71,71,-57,42,-62,-63,-64,71,42,71,]),'STR':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'EYE':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ZEROS':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ONES':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'INT':([21,22,31,33,34,35,36,37,38,42,49,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,97,113,114,121,130,],[53,53,53,53,53,53,53,53,68,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,122,53,53,53,53,]),'FLOAT':([21,22,31,33,34,35,36,37,42,49,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,113,114,121,130,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ADD':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[70,-49,-50,-51,-52,-53,-54,-55,-56,70,70,70,70,70,70,-48,-47,70,-39,-40,-41,-42,-43,-44,-45,-46,70,70,70,70,70,70,-57,-62,-63,-64,70,70,]),'MUL':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[72,-49,-50,-51,-52,-53,-54,-55,-56,72,72,72,72,72,72,-48,-47,72,72,72,-41,-42,72,72,-45,-46,72,72,72,72,72,72,-57,-62,-63,-64,72,72,]),'DIV':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[73,-49,-50,-51,-52,-53,-54,-55,-56,73,73,73,73,73,73,-48,-47,73,73,73,-41,-42,73,73,-45,-46,73,73,73,73,73,73,-57,-62,-63,-64,73,73,]),'DOTADD':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[74,-49,-50,-51,-52,-53,-54,-55,-56,74,74,74,74,74,74,-48,-47,74,-39,-40,-41,-42,-43,-44,-45,-46,74,74,74,74,74,74,-57,-62,-63,-64,74,74,]),'DOTMIN':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[75,-49,-50,-51,-52,-53,-54,-55,-56,75,75,75,75,75,75,-48,-47,75,-39,-40,-41,-42,-43,-44,-45,-46,75,75,75,75,75,75,-57,-62,-63,-64,75,75,]),'DOTMUL':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[76,-49,-50,-51,-52,-53,-54,-55,-56,76,76,76,76,76,76,-48,-47,76,76,76,-41,-42,76,76,-45,-46,76,76,76,76,76,76,-57,-62,-63,-64,76,76,]),'DOTDIV':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[77,-49,-50,-51,-52,-53,-54,-55,-56,77,77,77,77,77,77,-48,-47,77,77,77,-41,-42,77,77,-45,-46,77,77,77,77,77,77,-57,-62,-63,-64,77,77,]),'TRANSPOSE':([40,43,44,45,46,47,48,53,54,61,63,64,65,66,67,78,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,126,127,128,131,],[78,-49,-50,-51,-52,-53,-54,-55,-56,78,78,78,78,78,78,-48,-47,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-57,-62,-63,-64,78,78,]),'LT':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[79,-49,-50,-51,-52,-53,-54,-55,-56,79,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),'GT':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[80,-49,-50,-51,-52,-53,-54,-55,-56,80,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),'LTE':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[81,-49,-50,-51,-52,-53,-54,-55,-56,81,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),'GTE':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[82,-49,-50,-51,-52,-53,-54,-55,-56,82,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),'NE':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[83,-49,-50,-51,-52,-53,-54,-55,-56,83,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),'RELASSIGN':([40,43,44,45,46,47,48,53,54,61,78,85,98,99,100,101,102,103,104,105,112,125,126,127,],[84,-49,-50,-51,-52,-53,-54,-55,-56,84,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),':':([43,44,45,46,47,48,53,54,78,85,96,98,99,100,101,102,103,104,105,112,125,126,127,],[-49,-50,-51,-52,-53,-54,-55,-56,-48,-47,121,-39,-40,-41,-42,-43,-44,-45,-46,-57,-62,-63,-64,]),')':([43,44,45,46,47,48,53,54,57,60,78,85,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,117,118,125,126,127,],[-49,-50,-51,-52,-53,-54,-55,-56,-67,94,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-57,125,126,127,-66,-62,-63,-64,]),',':([44,45,46,47,48,53,54,56,57,68,87,88,112,115,116,117,118,123,124,125,126,127,],[-50,-51,-52,-53,-54,-55,-56,92,-67,97,114,-61,-57,92,92,92,-66,114,-60,-62,-63,-64,]),']':([53,54,86,87,88,122,123,124,],[-55,-56,112,-59,-61,129,-58,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,14,],[3,29,]),'instruction':([0,3,14,29,30,39,93,95,],[4,23,4,23,59,69,119,120,]),'block':([0,3,14,29,30,39,93,95,],[5,5,5,5,5,5,5,5,]),'if':([0,3,14,29,30,39,93,95,],[6,6,6,6,6,6,6,6,]),'for':([0,3,14,29,30,39,93,95,],[7,7,7,7,7,7,7,7,]),'while':([0,3,14,29,30,39,93,95,],[8,8,8,8,8,8,8,8,]),'break':([0,3,14,29,30,39,93,95,],[9,9,9,9,9,9,9,9,]),'continue':([0,3,14,29,30,39,93,95,],[10,10,10,10,10,10,10,10,]),'return':([0,3,14,29,30,39,93,95,],[11,11,11,11,11,11,11,11,]),'print':([0,3,14,29,30,39,93,95,],[12,12,12,12,12,12,12,12,]),'assign':([0,3,14,29,30,39,93,95,],[13,13,13,13,13,13,13,13,]),'BOOLEAN_IN_PARENTHESES':([15,18,],[30,39,]),'EXPRESSION':([21,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,121,130,],[40,61,63,64,65,66,67,85,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,131,]),'BOOLEAN_EXPRESSION':([21,31,],[41,60,]),'CONSTANT_EXPRESSION':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,57,57,57,118,43,43,]),'MATRIX':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'MATRIX_EXPRESSION':([21,22,31,33,34,35,36,37,42,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,121,130,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NUMBER':([21,22,31,33,34,35,36,37,42,49,62,70,71,72,73,74,75,76,77,79,80,81,82,83,84,89,90,91,92,113,114,121,130,],[46,46,46,46,46,46,46,46,46,88,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,88,124,46,46,]),'PRINT_EXPR':([22,],[55,]),'MULTIPLE_EXPR':([22,89,90,91,],[56,115,116,117,]),'ROWS':([49,],[86,]),'ROW':([49,113,],[87,123,]),'RANGE':([62,],[95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',21),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',26),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt2','Mparser.py',32),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',38),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',39),
  ('block -> { instructions }','block',3,'p_block','Mparser.py',50),
  ('instruction -> block','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> for','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> while','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> break ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> continue ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> return ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> print ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> assign ;','instruction',2,'p_instruction','Mparser.py',63),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction','if',3,'p_if','Mparser.py',68),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction','if',5,'p_if','Mparser.py',69),
  ('for -> FOR ID ASSIGN RANGE instruction','for',5,'p_for','Mparser.py',78),
  ('RANGE -> EXPRESSION : EXPRESSION','RANGE',3,'p_range1','Mparser.py',84),
  ('while -> WHILE BOOLEAN_IN_PARENTHESES instruction','while',3,'p_while','Mparser.py',90),
  ('break -> BREAK','break',1,'p_break','Mparser.py',96),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',102),
  ('return -> RETURN','return',1,'p_return','Mparser.py',108),
  ('return -> RETURN EXPRESSION','return',2,'p_return','Mparser.py',109),
  ('return -> RETURN BOOLEAN_EXPRESSION','return',2,'p_return','Mparser.py',110),
  ('print -> PRINT PRINT_EXPR','print',2,'p_print','Mparser.py',120),
  ('assign -> ID ASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',125),
  ('assign -> ID ADDASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',126),
  ('assign -> ID MINASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',127),
  ('assign -> ID MULASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',128),
  ('assign -> ID DIVASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',129),
  ('assign -> ID [ INT , INT ] ASSIGN EXPRESSION','assign',8,'p_expression_assignment_ref','Mparser.py',135),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',143),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',144),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',145),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',146),
  ('BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',147),
  ('BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',148),
  ('EXPRESSION -> EXPRESSION ADD EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',155),
  ('EXPRESSION -> EXPRESSION MIN EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',156),
  ('EXPRESSION -> EXPRESSION MUL EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',157),
  ('EXPRESSION -> EXPRESSION DIV EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',158),
  ('EXPRESSION -> EXPRESSION DOTADD EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',164),
  ('EXPRESSION -> EXPRESSION DOTMIN EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',165),
  ('EXPRESSION -> EXPRESSION DOTMUL EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',166),
  ('EXPRESSION -> EXPRESSION DOTDIV EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',167),
  ('EXPRESSION -> MIN EXPRESSION','EXPRESSION',2,'p_expr_uminus','Mparser.py',173),
  ('EXPRESSION -> EXPRESSION TRANSPOSE','EXPRESSION',2,'p_transpose','Mparser.py',180),
  ('EXPRESSION -> CONSTANT_EXPRESSION','EXPRESSION',1,'p_expression','Mparser.py',186),
  ('CONSTANT_EXPRESSION -> MATRIX','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',191),
  ('CONSTANT_EXPRESSION -> MATRIX_EXPRESSION','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',192),
  ('CONSTANT_EXPRESSION -> NUMBER','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',193),
  ('CONSTANT_EXPRESSION -> STR','CONSTANT_EXPRESSION',1,'p_constant_expression_2','Mparser.py',198),
  ('CONSTANT_EXPRESSION -> ID','CONSTANT_EXPRESSION',1,'p_constant_expression_3','Mparser.py',204),
  ('NUMBER -> INT','NUMBER',1,'p_number_int','Mparser.py',210),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number_int','Mparser.py',211),
  ('MATRIX -> [ ROWS ]','MATRIX',3,'p_matrix','Mparser.py',217),
  ('ROWS -> ROWS ; ROW','ROWS',3,'p_matrix_rows','Mparser.py',223),
  ('ROWS -> ROW','ROWS',1,'p_matrix_rows','Mparser.py',224),
  ('ROW -> ROW , NUMBER','ROW',3,'p_matrix_row','Mparser.py',234),
  ('ROW -> NUMBER','ROW',1,'p_matrix_row','Mparser.py',235),
  ('MATRIX_EXPRESSION -> EYE ( MULTIPLE_EXPR )','MATRIX_EXPRESSION',4,'p_expression_matrix_functions','Mparser.py',245),
  ('MATRIX_EXPRESSION -> ZEROS ( MULTIPLE_EXPR )','MATRIX_EXPRESSION',4,'p_expression_matrix_functions','Mparser.py',246),
  ('MATRIX_EXPRESSION -> ONES ( MULTIPLE_EXPR )','MATRIX_EXPRESSION',4,'p_expression_matrix_functions','Mparser.py',247),
  ('BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION )','BOOLEAN_IN_PARENTHESES',3,'p_boolean_in_parentheses','Mparser.py',254),
  ('MULTIPLE_EXPR -> MULTIPLE_EXPR , CONSTANT_EXPRESSION','MULTIPLE_EXPR',3,'p_multiple_expression','Mparser.py',259),
  ('MULTIPLE_EXPR -> CONSTANT_EXPRESSION','MULTIPLE_EXPR',1,'p_multiple_expression','Mparser.py',260),
  ('PRINT_EXPR -> MULTIPLE_EXPR','PRINT_EXPR',1,'p_print_expression','Mparser.py',270),
]
