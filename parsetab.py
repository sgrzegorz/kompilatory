
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocASSIGNADDASSIGNMINASSIGNMULASSIGNDIVASSIGNRELASSIGNleftADDMINDOTADDDOTMINleftMULDIVDOTMULDOTDIVleftLTGTLTEGTENEleft(){}nonassocTRANSPOSErightUMINUSADD ADDASSIGN ASSIGN BREAK COM CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMIN DOTMUL ELSE EYE FLOAT FOR GT GTE ID IF IGN INT LT LTE MIN MINASSIGN MUL MULASSIGN NE NL ONES PRINT RELASSIGN RETURN STR TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instruction\n                    | instruction block : '{' instructions '}' instruction : block\n                    | if\n                    | for\n                    | while\n                    | break ';'\n                    | continue ';'\n                    | return ';'\n                    | print ';'\n                    | assign ';'if : IF BOOLEAN_IN_PARENTHESES instruction %prec IFX\n          | IF BOOLEAN_IN_PARENTHESES instruction ELSE instructionfor :  FOR ID ASSIGN RANGE instruction RANGE : EXPRESSION ':' EXPRESSIONwhile : WHILE BOOLEAN_IN_PARENTHESES instruction break : BREAK continue : CONTINUE return : RETURN\n              | RETURN EXPRESSION\n              | RETURN BOOLEAN_EXPRESSIONassign : ID ASSIGN EXPRESSIONassign : ID ADDASSIGN EXPRESSION\n              | ID MINASSIGN EXPRESSION\n              | ID MULASSIGN EXPRESSION\n              | ID DIVASSIGN EXPRESSION assign : ID '[' EXPRESSION  ',' EXPRESSION ']' ASSIGN EXPRESSIONBOOLEAN_EXPRESSION : EXPRESSION LT EXPRESSION\n                          | EXPRESSION GT EXPRESSION\n                          | EXPRESSION LTE EXPRESSION\n                          | EXPRESSION GTE EXPRESSION\n                          | EXPRESSION NE EXPRESSION\n                          | EXPRESSION RELASSIGN EXPRESSIONEXPRESSION : EXPRESSION ADD EXPRESSION\n                  | EXPRESSION MIN EXPRESSION\n                  | EXPRESSION MUL EXPRESSION\n                  | EXPRESSION DIV EXPRESSIONEXPRESSION : EXPRESSION DOTADD EXPRESSION\n                  | EXPRESSION DOTMIN EXPRESSION\n                  | EXPRESSION DOTMUL EXPRESSION\n                  | EXPRESSION DOTDIV EXPRESSIONEXPRESSION : MIN EXPRESSION %prec UMINUSEXPRESSION : EXPRESSION TRANSPOSEEXPRESSION : MATRIX\n                | MATRIX_FUNCTIONS\n                | NUMBEREXPRESSION : STREXPRESSION : IDNUMBER : INT\n              | FLOATMATRIX : '[' ROWS ']' ROWS : ROWS ';' ROW\n             | ROW ROW : ROW ',' EXPRESSION\n            | EXPRESSIONMATRIX_FUNCTIONS : EYE '(' MATRIX_FUNCTIONS_EXPRESSION ')'\n                         | ZEROS '(' MATRIX_FUNCTIONS_EXPRESSION ')'\n                         | ONES '(' MATRIX_FUNCTIONS_EXPRESSION ')'BOOLEAN_IN_PARENTHESES : '(' BOOLEAN_EXPRESSION ')'MULTIPLE_EXPR : MULTIPLE_EXPR ',' EXPRESSION\n                  | EXPRESSIONMATRIX_FUNCTIONS_EXPRESSION : MATRIX_FUNCTIONS_EXPRESSION ',' EXPRESSION\n                            | EXPRESSIONprint : PRINT MULTIPLE_EXPR "
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,23,24,25,26,27,28,56,57,67,118,119,],[-3,0,-1,-2,-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,-6,-16,-20,-17,-18,]),'{':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[14,14,-5,-7,-8,-9,-10,14,-4,-11,-12,-13,-14,-15,14,14,14,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,14,-63,14,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'IF':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[15,15,-5,-7,-8,-9,-10,15,-4,-11,-12,-13,-14,-15,15,15,15,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,15,-63,15,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'FOR':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[16,16,-5,-7,-8,-9,-10,16,-4,-11,-12,-13,-14,-15,16,16,16,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,16,-63,16,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'WHILE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[18,18,-5,-7,-8,-9,-10,18,-4,-11,-12,-13,-14,-15,18,18,18,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,18,-63,18,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'BREAK':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[19,19,-5,-7,-8,-9,-10,19,-4,-11,-12,-13,-14,-15,19,19,19,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,19,-63,19,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'CONTINUE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[20,20,-5,-7,-8,-9,-10,20,-4,-11,-12,-13,-14,-15,20,20,20,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,20,-63,20,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'RETURN':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[21,21,-5,-7,-8,-9,-10,21,-4,-11,-12,-13,-14,-15,21,21,21,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,21,-63,21,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'PRINT':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,52,53,56,57,67,76,83,91,92,93,96,97,98,99,100,101,102,103,110,118,119,124,126,127,128,],[22,22,-5,-7,-8,-9,-10,22,-4,-11,-12,-13,-14,-15,22,22,22,-48,-49,-50,-51,-52,-53,-54,-6,-16,-20,-47,-46,22,-63,22,-38,-39,-40,-41,-42,-43,-44,-45,-55,-17,-18,-60,-61,-62,-19,]),'ID':([0,3,4,5,6,7,8,14,16,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,42,43,44,45,46,47,48,52,53,56,57,60,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,110,111,112,118,119,120,124,125,126,127,128,131,],[17,17,-5,-7,-8,-9,-10,17,32,47,47,-4,-11,-12,-13,-14,-15,17,17,47,47,47,47,47,47,47,17,47,-48,-49,-50,-51,-52,47,-53,-54,-6,-16,47,-20,47,47,47,47,47,47,47,47,-47,47,47,47,47,47,47,-46,47,47,47,47,17,-63,17,47,-38,-39,-40,-41,-42,-43,-44,-45,-55,47,47,-17,-18,47,-60,47,-61,-62,-19,47,]),'}':([4,5,6,7,8,23,24,25,26,27,28,29,56,57,67,118,119,],[-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,56,-6,-16,-20,-17,-18,]),'ELSE':([5,6,7,8,24,25,26,27,28,56,57,67,118,119,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-6,91,-20,-17,-18,]),';':([9,10,11,12,13,19,20,21,40,41,43,44,45,46,47,52,53,54,55,61,62,63,64,65,76,83,84,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,117,122,123,124,126,127,132,],[24,25,26,27,28,-21,-22,-23,-24,-25,-48,-49,-50,-51,-52,-53,-54,-68,-65,-26,-27,-28,-29,-30,-47,-46,111,-57,-59,-38,-39,-40,-41,-42,-43,-44,-45,-32,-33,-34,-35,-36,-37,-55,-64,-56,-58,-60,-61,-62,-31,]),'(':([15,18,49,50,51,],[31,31,87,88,89,]),'ASSIGN':([17,32,129,],[33,60,131,]),'ADDASSIGN':([17,],[34,]),'MINASSIGN':([17,],[35,]),'MULASSIGN':([17,],[36,]),'DIVASSIGN':([17,],[37,]),'[':([17,21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[38,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'MIN':([21,22,31,33,34,35,36,37,38,40,42,43,44,45,46,47,48,52,53,55,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,117,120,121,123,124,125,126,127,128,130,131,132,],[42,42,42,42,42,42,42,42,42,69,42,-48,-49,-50,-51,-52,42,-53,-54,69,69,42,69,69,69,69,69,69,42,42,42,42,42,42,42,42,-47,42,42,42,42,42,42,-46,69,42,42,42,42,69,42,-38,-39,-40,-41,-42,-43,-44,-45,69,69,69,69,69,69,-55,42,42,69,69,42,69,69,-60,42,-61,-62,69,69,42,69,]),'STR':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'EYE':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'ZEROS':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ONES':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'INT':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FLOAT':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ADD':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[68,-48,-49,-50,-51,-52,-53,-54,68,68,68,68,68,68,68,68,-47,-46,68,68,-38,-39,-40,-41,-42,-43,-44,-45,68,68,68,68,68,68,-55,68,68,68,68,-60,-61,-62,68,68,68,]),'MUL':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[70,-48,-49,-50,-51,-52,-53,-54,70,70,70,70,70,70,70,70,-47,-46,70,70,70,70,-40,-41,70,70,-44,-45,70,70,70,70,70,70,-55,70,70,70,70,-60,-61,-62,70,70,70,]),'DIV':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[71,-48,-49,-50,-51,-52,-53,-54,71,71,71,71,71,71,71,71,-47,-46,71,71,71,71,-40,-41,71,71,-44,-45,71,71,71,71,71,71,-55,71,71,71,71,-60,-61,-62,71,71,71,]),'DOTADD':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[72,-48,-49,-50,-51,-52,-53,-54,72,72,72,72,72,72,72,72,-47,-46,72,72,-38,-39,-40,-41,-42,-43,-44,-45,72,72,72,72,72,72,-55,72,72,72,72,-60,-61,-62,72,72,72,]),'DOTMIN':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[73,-48,-49,-50,-51,-52,-53,-54,73,73,73,73,73,73,73,73,-47,-46,73,73,-38,-39,-40,-41,-42,-43,-44,-45,73,73,73,73,73,73,-55,73,73,73,73,-60,-61,-62,73,73,73,]),'DOTMUL':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[74,-48,-49,-50,-51,-52,-53,-54,74,74,74,74,74,74,74,74,-47,-46,74,74,74,74,-40,-41,74,74,-44,-45,74,74,74,74,74,74,-55,74,74,74,74,-60,-61,-62,74,74,74,]),'DOTDIV':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[75,-48,-49,-50,-51,-52,-53,-54,75,75,75,75,75,75,75,75,-47,-46,75,75,75,75,-40,-41,75,75,-44,-45,75,75,75,75,75,75,-55,75,75,75,75,-60,-61,-62,75,75,75,]),'TRANSPOSE':([40,43,44,45,46,47,52,53,55,59,61,62,63,64,65,66,76,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,117,121,123,124,126,127,128,130,132,],[76,-48,-49,-50,-51,-52,-53,-54,76,76,76,76,76,76,76,76,-47,-46,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-55,76,76,76,76,-60,-61,-62,76,76,76,]),'LT':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[77,-48,-49,-50,-51,-52,-53,-54,77,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),'GT':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[78,-48,-49,-50,-51,-52,-53,-54,78,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),'LTE':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[79,-48,-49,-50,-51,-52,-53,-54,79,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),'GTE':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[80,-48,-49,-50,-51,-52,-53,-54,80,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),'NE':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[81,-48,-49,-50,-51,-52,-53,-54,81,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),'RELASSIGN':([40,43,44,45,46,47,52,53,59,76,83,96,97,98,99,100,101,102,103,110,124,126,127,],[82,-48,-49,-50,-51,-52,-53,-54,82,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),',':([43,44,45,46,47,52,53,54,55,66,76,83,85,86,96,97,98,99,100,101,102,103,110,113,114,115,116,117,122,123,124,126,127,130,],[-48,-49,-50,-51,-52,-53,-54,90,-65,95,-47,-46,112,-59,-38,-39,-40,-41,-42,-43,-44,-45,-55,125,-67,125,125,-64,112,-58,-60,-61,-62,-66,]),']':([43,44,45,46,47,52,53,76,83,84,85,86,96,97,98,99,100,101,102,103,110,121,122,123,124,126,127,],[-48,-49,-50,-51,-52,-53,-54,-47,-46,110,-57,-59,-38,-39,-40,-41,-42,-43,-44,-45,-55,129,-56,-58,-60,-61,-62,]),':':([43,44,45,46,47,52,53,76,83,94,96,97,98,99,100,101,102,103,110,124,126,127,],[-48,-49,-50,-51,-52,-53,-54,-47,-46,120,-38,-39,-40,-41,-42,-43,-44,-45,-55,-60,-61,-62,]),')':([43,44,45,46,47,52,53,58,76,83,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,124,126,127,130,],[-48,-49,-50,-51,-52,-53,-54,92,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-32,-33,-34,-35,-36,-37,-55,124,-67,126,127,-60,-61,-62,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,14,],[3,29,]),'instruction':([0,3,14,29,30,39,91,93,],[4,23,4,23,57,67,118,119,]),'block':([0,3,14,29,30,39,91,93,],[5,5,5,5,5,5,5,5,]),'if':([0,3,14,29,30,39,91,93,],[6,6,6,6,6,6,6,6,]),'for':([0,3,14,29,30,39,91,93,],[7,7,7,7,7,7,7,7,]),'while':([0,3,14,29,30,39,91,93,],[8,8,8,8,8,8,8,8,]),'break':([0,3,14,29,30,39,91,93,],[9,9,9,9,9,9,9,9,]),'continue':([0,3,14,29,30,39,91,93,],[10,10,10,10,10,10,10,10,]),'return':([0,3,14,29,30,39,91,93,],[11,11,11,11,11,11,11,11,]),'print':([0,3,14,29,30,39,91,93,],[12,12,12,12,12,12,12,12,]),'assign':([0,3,14,29,30,39,91,93,],[13,13,13,13,13,13,13,13,]),'BOOLEAN_IN_PARENTHESES':([15,18,],[30,39,]),'EXPRESSION':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[40,55,59,61,62,63,64,65,66,83,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,114,114,117,121,86,123,128,130,132,]),'BOOLEAN_EXPRESSION':([21,31,],[41,58,]),'MATRIX':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'MATRIX_FUNCTIONS':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NUMBER':([21,22,31,33,34,35,36,37,38,42,48,60,68,69,70,71,72,73,74,75,77,78,79,80,81,82,87,88,89,90,95,111,112,120,125,131,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MULTIPLE_EXPR':([22,],[54,]),'ROWS':([48,],[84,]),'ROW':([48,111,],[85,122,]),'RANGE':([60,],[93,]),'MATRIX_FUNCTIONS_EXPRESSION':([87,88,89,],[113,115,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',24),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',29),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt2','Mparser.py',35),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',41),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',42),
  ('block -> { instructions }','block',3,'p_block','Mparser.py',53),
  ('instruction -> block','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> for','instruction',1,'p_instruction','Mparser.py',60),
  ('instruction -> while','instruction',1,'p_instruction','Mparser.py',61),
  ('instruction -> break ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> continue ;','instruction',2,'p_instruction','Mparser.py',63),
  ('instruction -> return ;','instruction',2,'p_instruction','Mparser.py',64),
  ('instruction -> print ;','instruction',2,'p_instruction','Mparser.py',65),
  ('instruction -> assign ;','instruction',2,'p_instruction','Mparser.py',66),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction','if',3,'p_if','Mparser.py',71),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction','if',5,'p_if','Mparser.py',72),
  ('for -> FOR ID ASSIGN RANGE instruction','for',5,'p_for','Mparser.py',81),
  ('RANGE -> EXPRESSION : EXPRESSION','RANGE',3,'p_range1','Mparser.py',89),
  ('while -> WHILE BOOLEAN_IN_PARENTHESES instruction','while',3,'p_while','Mparser.py',95),
  ('break -> BREAK','break',1,'p_break','Mparser.py',101),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',107),
  ('return -> RETURN','return',1,'p_return','Mparser.py',113),
  ('return -> RETURN EXPRESSION','return',2,'p_return','Mparser.py',114),
  ('return -> RETURN BOOLEAN_EXPRESSION','return',2,'p_return','Mparser.py',115),
  ('assign -> ID ASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',125),
  ('assign -> ID ADDASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',133),
  ('assign -> ID MINASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',134),
  ('assign -> ID MULASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',135),
  ('assign -> ID DIVASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',136),
  ('assign -> ID [ EXPRESSION , EXPRESSION ] ASSIGN EXPRESSION','assign',8,'p_expression_assignment_ref','Mparser.py',144),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',155),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',156),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',157),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',158),
  ('BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',159),
  ('BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',160),
  ('EXPRESSION -> EXPRESSION ADD EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',167),
  ('EXPRESSION -> EXPRESSION MIN EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',168),
  ('EXPRESSION -> EXPRESSION MUL EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',169),
  ('EXPRESSION -> EXPRESSION DIV EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',170),
  ('EXPRESSION -> EXPRESSION DOTADD EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',176),
  ('EXPRESSION -> EXPRESSION DOTMIN EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',177),
  ('EXPRESSION -> EXPRESSION DOTMUL EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',178),
  ('EXPRESSION -> EXPRESSION DOTDIV EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',179),
  ('EXPRESSION -> MIN EXPRESSION','EXPRESSION',2,'p_expr_uminus','Mparser.py',185),
  ('EXPRESSION -> EXPRESSION TRANSPOSE','EXPRESSION',2,'p_transpose','Mparser.py',192),
  ('EXPRESSION -> MATRIX','EXPRESSION',1,'p_expression_1','Mparser.py',198),
  ('EXPRESSION -> MATRIX_FUNCTIONS','EXPRESSION',1,'p_expression_1','Mparser.py',199),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_expression_1','Mparser.py',200),
  ('EXPRESSION -> STR','EXPRESSION',1,'p_expression_2','Mparser.py',205),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_3','Mparser.py',211),
  ('NUMBER -> INT','NUMBER',1,'p_number_int','Mparser.py',217),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number_int','Mparser.py',218),
  ('MATRIX -> [ ROWS ]','MATRIX',3,'p_matrix','Mparser.py',224),
  ('ROWS -> ROWS ; ROW','ROWS',3,'p_matrix_rows','Mparser.py',230),
  ('ROWS -> ROW','ROWS',1,'p_matrix_rows','Mparser.py',231),
  ('ROW -> ROW , EXPRESSION','ROW',3,'p_matrix_row','Mparser.py',241),
  ('ROW -> EXPRESSION','ROW',1,'p_matrix_row','Mparser.py',242),
  ('MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',252),
  ('MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',253),
  ('MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',254),
  ('BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION )','BOOLEAN_IN_PARENTHESES',3,'p_boolean_in_parentheses','Mparser.py',261),
  ('MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION','MULTIPLE_EXPR',3,'p_multiple_expression','Mparser.py',266),
  ('MULTIPLE_EXPR -> EXPRESSION','MULTIPLE_EXPR',1,'p_multiple_expression','Mparser.py',267),
  ('MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION','MATRIX_FUNCTIONS_EXPRESSION',3,'p_expression_matrix_functions_expression','Mparser.py',277),
  ('MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION','MATRIX_FUNCTIONS_EXPRESSION',1,'p_expression_matrix_functions_expression','Mparser.py',278),
  ('print -> PRINT MULTIPLE_EXPR','print',2,'p_print','Mparser.py',288),
]
