
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocASSIGNADDASSIGNMINASSIGNMULASSIGNDIVASSIGNRELASSIGNleftADDMINDOTADDDOTMINleftMULDIVDOTMULDOTDIVleftLTGTLTEGTENEleft(){}nonassocTRANSPOSErightUMINUSADD ADDASSIGN ASSIGN BREAK COM CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMIN DOTMUL ELSE EYE FLOAT FOR GT GTE ID IF IGN INT LT LTE MIN MINASSIGN MUL MULASSIGN NE NL ONES PRINT RELASSIGN RETURN STR TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instruction\n                    | instruction block : '{' instructions '}' instruction : block\n                    | if\n                    | for\n                    | while\n                    | break ';'\n                    | continue ';'\n                    | return ';'\n                    | print ';'\n                    | assign ';'if : IF BOOLEAN_IN_PARENTHESES instruction %prec IFX\n          | IF BOOLEAN_IN_PARENTHESES instruction ELSE instructionfor :  FOR ID ASSIGN RANGE instruction RANGE : EXPRESSION ':' EXPRESSIONwhile : WHILE BOOLEAN_IN_PARENTHESES instruction break : BREAK continue : CONTINUE return : RETURN\n              | RETURN EXPRESSION\n              | RETURN BOOLEAN_EXPRESSIONassign : ID ASSIGN EXPRESSIONassign : ID ADDASSIGN EXPRESSION\n              | ID MINASSIGN EXPRESSION\n              | ID MULASSIGN EXPRESSION\n              | ID DIVASSIGN EXPRESSIONassign : REF ASSIGN EXPRESSIONREF : ID '[' EXPRESSION  ',' EXPRESSION ']'BOOLEAN_EXPRESSION : EXPRESSION LT EXPRESSION\n                          | EXPRESSION GT EXPRESSION\n                          | EXPRESSION LTE EXPRESSION\n                          | EXPRESSION GTE EXPRESSION\n                          | EXPRESSION NE EXPRESSION\n                          | EXPRESSION RELASSIGN EXPRESSIONEXPRESSION : EXPRESSION ADD EXPRESSION\n                  | EXPRESSION MIN EXPRESSION\n                  | EXPRESSION MUL EXPRESSION\n                  | EXPRESSION DIV EXPRESSIONEXPRESSION : EXPRESSION DOTADD EXPRESSION\n                  | EXPRESSION DOTMIN EXPRESSION\n                  | EXPRESSION DOTMUL EXPRESSION\n                  | EXPRESSION DOTDIV EXPRESSIONEXPRESSION : MIN EXPRESSION %prec UMINUSEXPRESSION : EXPRESSION TRANSPOSEEXPRESSION : BOOLEAN_EXPRESSION\n                  | MATRIX\n                  | MATRIX_FUNCTIONS\n                  | REF\n                  | NUMBEREXPRESSION : STREXPRESSION : IDNUMBER : INT\n              | FLOATMATRIX : '[' ROWS ']' ROWS : ROWS ';' ROW\n             | ROW ROW : ROW ',' EXPRESSION\n            | EXPRESSIONMATRIX_FUNCTIONS : EYE '(' MATRIX_FUNCTIONS_EXPRESSION ')'\n                         | ZEROS '(' MATRIX_FUNCTIONS_EXPRESSION ')'\n                         | ONES '(' MATRIX_FUNCTIONS_EXPRESSION ')'BOOLEAN_IN_PARENTHESES : '(' BOOLEAN_EXPRESSION ')'MULTIPLE_EXPR : MULTIPLE_EXPR ',' EXPRESSION\n                  | EXPRESSIONMATRIX_FUNCTIONS_EXPRESSION : MATRIX_FUNCTIONS_EXPRESSION ',' EXPRESSION\n                            | EXPRESSIONprint : PRINT MULTIPLE_EXPR "
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,24,25,26,27,28,29,60,61,71,123,124,],[-3,0,-1,-2,-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,-6,-16,-20,-17,-18,]),'{':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[14,14,-5,-7,-8,-9,-10,14,-4,-11,-12,-13,-14,-15,14,14,14,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,14,-66,14,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'IF':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[15,15,-5,-7,-8,-9,-10,15,-4,-11,-12,-13,-14,-15,15,15,15,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,15,-66,15,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'FOR':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[16,16,-5,-7,-8,-9,-10,16,-4,-11,-12,-13,-14,-15,16,16,16,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,16,-66,16,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'WHILE':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[18,18,-5,-7,-8,-9,-10,18,-4,-11,-12,-13,-14,-15,18,18,18,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,18,-66,18,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'BREAK':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[19,19,-5,-7,-8,-9,-10,19,-4,-11,-12,-13,-14,-15,19,19,19,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,19,-66,19,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'CONTINUE':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[20,20,-5,-7,-8,-9,-10,20,-4,-11,-12,-13,-14,-15,20,20,20,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,20,-66,20,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'RETURN':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[21,21,-5,-7,-8,-9,-10,21,-4,-11,-12,-13,-14,-15,21,21,21,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,21,-66,21,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'PRINT':([0,3,4,5,6,7,8,14,24,25,26,27,28,29,30,31,40,44,45,46,47,48,49,54,55,58,60,61,71,80,87,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,124,129,131,132,133,134,],[22,22,-5,-7,-8,-9,-10,22,-4,-11,-12,-13,-14,-15,22,22,22,-50,-51,-52,-53,-54,-55,-56,-57,-49,-6,-16,-20,-48,-47,22,-66,22,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-17,-18,-63,-64,-65,-19,-32,]),'ID':([0,3,4,5,6,7,8,14,16,21,22,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,54,55,58,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,93,94,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,123,124,125,129,130,131,132,133,134,],[17,17,-5,-7,-8,-9,-10,17,33,49,49,-4,-11,-12,-13,-14,-15,17,17,49,49,49,49,49,49,49,17,49,-50,-51,-52,-53,-54,-55,49,-56,-57,-49,49,-6,-16,49,-20,49,49,49,49,49,49,49,49,-48,49,49,49,49,49,49,-47,49,49,49,49,17,-66,17,49,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,49,49,-17,-18,49,-63,49,-64,-65,-19,-32,]),'}':([4,5,6,7,8,24,25,26,27,28,29,30,60,61,71,123,124,],[-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,60,-6,-16,-20,-17,-18,]),'ELSE':([5,6,7,8,25,26,27,28,29,60,61,71,123,124,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-6,96,-20,-17,-18,]),';':([9,10,11,12,13,19,20,21,41,42,44,45,46,47,48,49,54,55,56,57,58,65,66,67,68,69,80,87,88,89,90,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,122,127,128,129,131,132,134,],[25,26,27,28,29,-21,-22,-23,-24,-25,-50,-51,-52,-53,-54,-55,-56,-57,-71,-68,-49,-26,-27,-28,-29,-30,-48,-47,116,-60,-62,-31,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-67,-59,-61,-63,-64,-65,-32,]),'(':([15,18,51,52,53,],[32,32,91,92,93,]),'ASSIGN':([17,23,33,134,],[34,59,64,-32,]),'ADDASSIGN':([17,],[35,]),'MINASSIGN':([17,],[36,]),'MULASSIGN':([17,],[37,]),'DIVASSIGN':([17,],[38,]),'[':([17,21,22,32,34,35,36,37,38,39,43,49,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[39,50,50,50,50,50,50,50,50,50,50,39,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'MIN':([21,22,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,54,55,57,58,59,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,125,126,128,129,130,131,132,133,134,135,],[43,43,43,43,43,43,43,43,43,73,-49,43,-50,-51,-52,-53,-54,-55,43,-56,-57,73,-49,43,-49,73,43,73,73,73,73,73,73,43,43,43,43,43,43,43,43,-48,43,43,43,43,43,43,-47,73,43,43,43,43,73,73,43,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,73,-58,43,43,73,73,43,73,73,-63,43,-64,-65,73,-32,73,]),'STR':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'EYE':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ZEROS':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'ONES':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'INT':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FLOAT':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ADD':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[72,-49,-50,-51,-52,-53,-54,-55,-56,-57,72,-49,-49,72,72,72,72,72,72,72,-48,-47,72,72,72,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,72,-58,72,72,72,72,-63,-64,-65,72,-32,72,]),'MUL':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[74,-49,-50,-51,-52,-53,-54,-55,-56,-57,74,-49,-49,74,74,74,74,74,74,74,-48,-47,74,74,74,74,74,-41,-42,74,74,-45,-46,-33,-34,-35,-36,-37,74,-58,74,74,74,74,-63,-64,-65,74,-32,74,]),'DIV':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[75,-49,-50,-51,-52,-53,-54,-55,-56,-57,75,-49,-49,75,75,75,75,75,75,75,-48,-47,75,75,75,75,75,-41,-42,75,75,-45,-46,-33,-34,-35,-36,-37,75,-58,75,75,75,75,-63,-64,-65,75,-32,75,]),'DOTADD':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[76,-49,-50,-51,-52,-53,-54,-55,-56,-57,76,-49,-49,76,76,76,76,76,76,76,-48,-47,76,76,76,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,76,-58,76,76,76,76,-63,-64,-65,76,-32,76,]),'DOTMIN':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[77,-49,-50,-51,-52,-53,-54,-55,-56,-57,77,-49,-49,77,77,77,77,77,77,77,-48,-47,77,77,77,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,77,-58,77,77,77,77,-63,-64,-65,77,-32,77,]),'DOTMUL':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[78,-49,-50,-51,-52,-53,-54,-55,-56,-57,78,-49,-49,78,78,78,78,78,78,78,-48,-47,78,78,78,78,78,-41,-42,78,78,-45,-46,-33,-34,-35,-36,-37,78,-58,78,78,78,78,-63,-64,-65,78,-32,78,]),'DOTDIV':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[79,-49,-50,-51,-52,-53,-54,-55,-56,-57,79,-49,-49,79,79,79,79,79,79,79,-48,-47,79,79,79,79,79,-41,-42,79,79,-45,-46,-33,-34,-35,-36,-37,79,-58,79,79,79,79,-63,-64,-65,79,-32,79,]),'TRANSPOSE':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[80,-49,-50,-51,-52,-53,-54,-55,-56,-57,80,-49,-49,80,80,80,80,80,80,80,-48,-47,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-58,80,80,80,80,-63,-64,-65,80,-32,80,]),'LT':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[81,-49,-50,-51,-52,-53,-54,-55,-56,-57,81,-49,-49,81,81,81,81,81,81,81,-48,-47,81,81,81,81,81,81,81,81,81,81,81,-33,-34,-35,-36,-37,81,-58,81,81,81,81,-63,-64,-65,81,-32,81,]),'GT':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[82,-49,-50,-51,-52,-53,-54,-55,-56,-57,82,-49,-49,82,82,82,82,82,82,82,-48,-47,82,82,82,82,82,82,82,82,82,82,82,-33,-34,-35,-36,-37,82,-58,82,82,82,82,-63,-64,-65,82,-32,82,]),'LTE':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[83,-49,-50,-51,-52,-53,-54,-55,-56,-57,83,-49,-49,83,83,83,83,83,83,83,-48,-47,83,83,83,83,83,83,83,83,83,83,83,-33,-34,-35,-36,-37,83,-58,83,83,83,83,-63,-64,-65,83,-32,83,]),'GTE':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[84,-49,-50,-51,-52,-53,-54,-55,-56,-57,84,-49,-49,84,84,84,84,84,84,84,-48,-47,84,84,84,84,84,84,84,84,84,84,84,-33,-34,-35,-36,-37,84,-58,84,84,84,84,-63,-64,-65,84,-32,84,]),'NE':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[85,-49,-50,-51,-52,-53,-54,-55,-56,-57,85,-49,-49,85,85,85,85,85,85,85,-48,-47,85,85,85,85,85,85,85,85,85,85,85,-33,-34,-35,-36,-37,85,-58,85,85,85,85,-63,-64,-65,85,-32,85,]),'RELASSIGN':([41,42,44,45,46,47,48,49,54,55,57,58,62,63,65,66,67,68,69,70,80,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,131,132,133,134,135,],[86,-49,-50,-51,-52,-53,-54,-55,-56,-57,86,-49,-49,86,86,86,86,86,86,86,-48,-47,86,86,86,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,None,-58,86,86,86,86,-63,-64,-65,86,-32,86,]),',':([44,45,46,47,48,49,54,55,56,57,58,70,80,87,89,90,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,122,127,128,129,131,132,134,135,],[-50,-51,-52,-53,-54,-55,-56,-57,94,-68,-49,100,-48,-47,117,-62,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,130,-70,130,130,-67,117,-61,-63,-64,-65,-32,-69,]),']':([44,45,46,47,48,49,54,55,58,80,87,88,89,90,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,131,132,134,],[-50,-51,-52,-53,-54,-55,-56,-57,-49,-48,-47,115,-60,-62,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,134,-59,-61,-63,-64,-65,-32,]),':':([44,45,46,47,48,49,54,55,58,80,87,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,129,131,132,134,],[-50,-51,-52,-53,-54,-55,-56,-57,-49,-48,-47,125,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,-63,-64,-65,-32,]),')':([44,45,46,47,48,49,54,55,58,62,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,129,131,132,134,135,],[-50,-51,-52,-53,-54,-55,-56,-57,-49,97,-48,-47,-39,-40,-41,-42,-43,-44,-45,-46,-33,-34,-35,-36,-37,-38,-58,129,-70,131,132,-63,-64,-65,-32,-69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,14,],[3,30,]),'instruction':([0,3,14,30,31,40,96,98,],[4,24,4,24,61,71,123,124,]),'block':([0,3,14,30,31,40,96,98,],[5,5,5,5,5,5,5,5,]),'if':([0,3,14,30,31,40,96,98,],[6,6,6,6,6,6,6,6,]),'for':([0,3,14,30,31,40,96,98,],[7,7,7,7,7,7,7,7,]),'while':([0,3,14,30,31,40,96,98,],[8,8,8,8,8,8,8,8,]),'break':([0,3,14,30,31,40,96,98,],[9,9,9,9,9,9,9,9,]),'continue':([0,3,14,30,31,40,96,98,],[10,10,10,10,10,10,10,10,]),'return':([0,3,14,30,31,40,96,98,],[11,11,11,11,11,11,11,11,]),'print':([0,3,14,30,31,40,96,98,],[12,12,12,12,12,12,12,12,]),'assign':([0,3,14,30,31,40,96,98,],[13,13,13,13,13,13,13,13,]),'REF':([0,3,14,21,22,30,31,32,34,35,36,37,38,39,40,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,96,98,100,116,117,125,130,],[23,23,23,46,46,23,23,46,46,46,46,46,46,46,23,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,23,23,46,46,46,46,46,]),'BOOLEAN_IN_PARENTHESES':([15,18,],[31,40,]),'EXPRESSION':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[41,57,63,65,66,67,68,69,70,87,90,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,119,119,122,126,90,128,133,135,]),'BOOLEAN_EXPRESSION':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[42,58,62,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'MATRIX':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'MATRIX_FUNCTIONS':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NUMBER':([21,22,32,34,35,36,37,38,39,43,50,59,64,72,73,74,75,76,77,78,79,81,82,83,84,85,86,91,92,93,94,100,116,117,125,130,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'MULTIPLE_EXPR':([22,],[56,]),'ROWS':([50,],[88,]),'ROW':([50,116,],[89,127,]),'RANGE':([64,],[98,]),'MATRIX_FUNCTIONS_EXPRESSION':([91,92,93,],[118,120,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',24),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',29),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt2','Mparser.py',35),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',41),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',42),
  ('block -> { instructions }','block',3,'p_block','Mparser.py',53),
  ('instruction -> block','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> for','instruction',1,'p_instruction','Mparser.py',60),
  ('instruction -> while','instruction',1,'p_instruction','Mparser.py',61),
  ('instruction -> break ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> continue ;','instruction',2,'p_instruction','Mparser.py',63),
  ('instruction -> return ;','instruction',2,'p_instruction','Mparser.py',64),
  ('instruction -> print ;','instruction',2,'p_instruction','Mparser.py',65),
  ('instruction -> assign ;','instruction',2,'p_instruction','Mparser.py',66),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction','if',3,'p_if','Mparser.py',71),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction','if',5,'p_if','Mparser.py',72),
  ('for -> FOR ID ASSIGN RANGE instruction','for',5,'p_for','Mparser.py',81),
  ('RANGE -> EXPRESSION : EXPRESSION','RANGE',3,'p_range1','Mparser.py',89),
  ('while -> WHILE BOOLEAN_IN_PARENTHESES instruction','while',3,'p_while','Mparser.py',95),
  ('break -> BREAK','break',1,'p_break','Mparser.py',101),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',107),
  ('return -> RETURN','return',1,'p_return','Mparser.py',113),
  ('return -> RETURN EXPRESSION','return',2,'p_return','Mparser.py',114),
  ('return -> RETURN BOOLEAN_EXPRESSION','return',2,'p_return','Mparser.py',115),
  ('assign -> ID ASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',125),
  ('assign -> ID ADDASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',133),
  ('assign -> ID MINASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',134),
  ('assign -> ID MULASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',135),
  ('assign -> ID DIVASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',136),
  ('assign -> REF ASSIGN EXPRESSION','assign',3,'p_expression_assignment_ref','Mparser.py',144),
  ('REF -> ID [ EXPRESSION , EXPRESSION ]','REF',6,'p_expression_ref','Mparser.py',150),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',158),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',159),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',160),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',161),
  ('BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',162),
  ('BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',163),
  ('EXPRESSION -> EXPRESSION ADD EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',170),
  ('EXPRESSION -> EXPRESSION MIN EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',171),
  ('EXPRESSION -> EXPRESSION MUL EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',172),
  ('EXPRESSION -> EXPRESSION DIV EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',173),
  ('EXPRESSION -> EXPRESSION DOTADD EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',179),
  ('EXPRESSION -> EXPRESSION DOTMIN EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',180),
  ('EXPRESSION -> EXPRESSION DOTMUL EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',181),
  ('EXPRESSION -> EXPRESSION DOTDIV EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',182),
  ('EXPRESSION -> MIN EXPRESSION','EXPRESSION',2,'p_expr_uminus','Mparser.py',188),
  ('EXPRESSION -> EXPRESSION TRANSPOSE','EXPRESSION',2,'p_transpose','Mparser.py',195),
  ('EXPRESSION -> BOOLEAN_EXPRESSION','EXPRESSION',1,'p_expression_1','Mparser.py',201),
  ('EXPRESSION -> MATRIX','EXPRESSION',1,'p_expression_1','Mparser.py',202),
  ('EXPRESSION -> MATRIX_FUNCTIONS','EXPRESSION',1,'p_expression_1','Mparser.py',203),
  ('EXPRESSION -> REF','EXPRESSION',1,'p_expression_1','Mparser.py',204),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_expression_1','Mparser.py',205),
  ('EXPRESSION -> STR','EXPRESSION',1,'p_expression_2','Mparser.py',210),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_3','Mparser.py',216),
  ('NUMBER -> INT','NUMBER',1,'p_number_int','Mparser.py',222),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number_int','Mparser.py',223),
  ('MATRIX -> [ ROWS ]','MATRIX',3,'p_matrix','Mparser.py',229),
  ('ROWS -> ROWS ; ROW','ROWS',3,'p_matrix_rows','Mparser.py',235),
  ('ROWS -> ROW','ROWS',1,'p_matrix_rows','Mparser.py',236),
  ('ROW -> ROW , EXPRESSION','ROW',3,'p_matrix_row','Mparser.py',246),
  ('ROW -> EXPRESSION','ROW',1,'p_matrix_row','Mparser.py',247),
  ('MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',257),
  ('MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',258),
  ('MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',259),
  ('BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION )','BOOLEAN_IN_PARENTHESES',3,'p_boolean_in_parentheses','Mparser.py',266),
  ('MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION','MULTIPLE_EXPR',3,'p_multiple_expression','Mparser.py',271),
  ('MULTIPLE_EXPR -> EXPRESSION','MULTIPLE_EXPR',1,'p_multiple_expression','Mparser.py',272),
  ('MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION','MATRIX_FUNCTIONS_EXPRESSION',3,'p_expression_matrix_functions_expression','Mparser.py',282),
  ('MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION','MATRIX_FUNCTIONS_EXPRESSION',1,'p_expression_matrix_functions_expression','Mparser.py',283),
  ('print -> PRINT MULTIPLE_EXPR','print',2,'p_print','Mparser.py',293),
]
