
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocASSIGNADDASSIGNMINASSIGNMULASSIGNDIVASSIGNRELASSIGNleftADDMINDOTADDDOTMINleftMULDIVDOTMULDOTDIVleftLTGTLTEGTENEleft(){}nonassocTRANSPOSErightUMINUSADD ADDASSIGN ASSIGN BREAK COM CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMIN DOTMUL ELSE EYE FLOAT FOR GT GTE ID IF IGN INT LT LTE MIN MINASSIGN MUL MULASSIGN NE NL ONES PRINT RELASSIGN RETURN STR TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instruction\n                    | instruction block : '{' instructions '}' instruction : block\n                    | if\n                    | for\n                    | while\n                    | break ';'\n                    | continue ';'\n                    | return ';'\n                    | print ';'\n                    | assign ';'if : IF BOOLEAN_IN_PARENTHESES instruction %prec IFX\n          | IF BOOLEAN_IN_PARENTHESES instruction ELSE instructionfor :  FOR ID ASSIGN RANGE instruction RANGE : EXPRESSION ':' EXPRESSIONwhile : WHILE BOOLEAN_IN_PARENTHESES instruction break : BREAK continue : CONTINUE return : RETURN\n              | RETURN EXPRESSION\n              | RETURN BOOLEAN_EXPRESSIONassign : ID ASSIGN EXPRESSIONassign : ID ADDASSIGN EXPRESSION\n              | ID MINASSIGN EXPRESSION\n              | ID MULASSIGN EXPRESSION\n              | ID DIVASSIGN EXPRESSION assign : ID '[' INT  ',' INT ']' ASSIGN EXPRESSIONBOOLEAN_EXPRESSION : EXPRESSION LT EXPRESSION\n                          | EXPRESSION GT EXPRESSION\n                          | EXPRESSION LTE EXPRESSION\n                          | EXPRESSION GTE EXPRESSION\n                          | EXPRESSION NE EXPRESSION\n                          | EXPRESSION RELASSIGN EXPRESSIONEXPRESSION : EXPRESSION ADD EXPRESSION\n                  | EXPRESSION MIN EXPRESSION\n                  | EXPRESSION MUL EXPRESSION\n                  | EXPRESSION DIV EXPRESSIONEXPRESSION : EXPRESSION DOTADD EXPRESSION\n                  | EXPRESSION DOTMIN EXPRESSION\n                  | EXPRESSION DOTMUL EXPRESSION\n                  | EXPRESSION DOTDIV EXPRESSIONEXPRESSION : MIN EXPRESSION %prec UMINUSEXPRESSION : EXPRESSION TRANSPOSEEXPRESSION : CONSTANT_EXPRESSIONCONSTANT_EXPRESSION : MATRIX\n                | MATRIX_FUNCTIONS\n                | NUMBERCONSTANT_EXPRESSION : STRCONSTANT_EXPRESSION : IDNUMBER : INT\n              | FLOATMATRIX : '[' ROWS ']' ROWS : ROWS ';' ROW\n             | ROW ROW : ROW ',' EXPRESSION\n            | EXPRESSIONMATRIX_FUNCTIONS : EYE '(' MULTIPLE_EXPR ')'\n                         | ZEROS '(' MULTIPLE_EXPR ')'\n                         | ONES '(' MULTIPLE_EXPR ')'BOOLEAN_IN_PARENTHESES : '(' BOOLEAN_EXPRESSION ')'MULTIPLE_EXPR : MULTIPLE_EXPR ',' CONSTANT_EXPRESSION\n                  | CONSTANT_EXPRESSIONprint : PRINT MULTIPLE_EXPR "
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,23,24,25,26,27,28,57,58,68,118,119,],[-3,0,-1,-2,-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,-6,-16,-20,-17,-18,]),'{':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[14,14,-5,-7,-8,-9,-10,14,-4,-11,-12,-13,-14,-15,14,14,14,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,14,-64,14,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'IF':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[15,15,-5,-7,-8,-9,-10,15,-4,-11,-12,-13,-14,-15,15,15,15,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,15,-64,15,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'FOR':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[16,16,-5,-7,-8,-9,-10,16,-4,-11,-12,-13,-14,-15,16,16,16,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,16,-64,16,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'WHILE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[18,18,-5,-7,-8,-9,-10,18,-4,-11,-12,-13,-14,-15,18,18,18,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,18,-64,18,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'BREAK':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[19,19,-5,-7,-8,-9,-10,19,-4,-11,-12,-13,-14,-15,19,19,19,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,19,-64,19,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'CONTINUE':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[20,20,-5,-7,-8,-9,-10,20,-4,-11,-12,-13,-14,-15,20,20,20,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,20,-64,20,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'RETURN':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[21,21,-5,-7,-8,-9,-10,21,-4,-11,-12,-13,-14,-15,21,21,21,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,21,-64,21,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'PRINT':([0,3,4,5,6,7,8,14,23,24,25,26,27,28,29,30,39,43,44,45,46,47,48,53,54,57,58,68,77,84,92,93,94,97,98,99,100,101,102,103,104,111,118,119,124,125,126,127,],[22,22,-5,-7,-8,-9,-10,22,-4,-11,-12,-13,-14,-15,22,22,22,-48,-49,-50,-51,-52,-53,-54,-55,-6,-16,-20,-47,-46,22,-64,22,-38,-39,-40,-41,-42,-43,-44,-45,-56,-17,-18,-61,-62,-63,-19,]),'ID':([0,3,4,5,6,7,8,14,16,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,42,43,44,45,46,47,48,49,53,54,57,58,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,111,112,113,118,119,120,124,125,126,127,129,],[17,17,-5,-7,-8,-9,-10,17,32,48,48,-4,-11,-12,-13,-14,-15,17,17,48,48,48,48,48,48,17,48,-48,-49,-50,-51,-52,-53,48,-54,-55,-6,-16,48,-20,48,48,48,48,48,48,48,48,-47,48,48,48,48,48,48,-46,48,48,48,48,17,-64,17,-38,-39,-40,-41,-42,-43,-44,-45,-56,48,48,-17,-18,48,-61,-62,-63,-19,48,]),'}':([4,5,6,7,8,23,24,25,26,27,28,29,57,58,68,118,119,],[-5,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,57,-6,-16,-20,-17,-18,]),'ELSE':([5,6,7,8,24,25,26,27,28,57,58,68,118,119,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-6,92,-20,-17,-18,]),';':([9,10,11,12,13,19,20,21,40,41,43,44,45,46,47,48,53,54,55,56,62,63,64,65,66,77,84,85,86,87,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,122,123,124,125,126,130,],[24,25,26,27,28,-21,-22,-23,-24,-25,-48,-49,-50,-51,-52,-53,-54,-55,-67,-66,-26,-27,-28,-29,-30,-47,-46,112,-58,-60,-38,-39,-40,-41,-42,-43,-44,-45,-32,-33,-34,-35,-36,-37,-56,-65,-57,-59,-61,-62,-63,-31,]),'(':([15,18,50,51,52,],[31,31,88,89,90,]),'ASSIGN':([17,32,128,],[33,61,129,]),'ADDASSIGN':([17,],[34,]),'MINASSIGN':([17,],[35,]),'MULASSIGN':([17,],[36,]),'DIVASSIGN':([17,],[37,]),'[':([17,21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[38,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MIN':([21,31,33,34,35,36,37,40,42,43,44,45,46,47,48,49,53,54,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,120,123,124,125,126,127,129,130,],[42,42,42,42,42,42,42,70,42,-48,-49,-50,-51,-52,-53,42,-54,-55,70,42,70,70,70,70,70,42,42,42,42,42,42,42,42,-47,42,42,42,42,42,42,-46,70,70,-38,-39,-40,-41,-42,-43,-44,-45,70,70,70,70,70,70,-56,42,42,42,70,-61,-62,-63,70,42,70,]),'STR':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'EYE':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ZEROS':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ONES':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'INT':([21,22,31,33,34,35,36,37,38,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,96,112,113,120,129,],[53,53,53,53,53,53,53,53,67,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,121,53,53,53,53,]),'FLOAT':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ADD':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[69,-48,-49,-50,-51,-52,-53,-54,-55,69,69,69,69,69,69,-47,-46,69,69,-38,-39,-40,-41,-42,-43,-44,-45,69,69,69,69,69,69,-56,69,-61,-62,-63,69,69,]),'MUL':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[71,-48,-49,-50,-51,-52,-53,-54,-55,71,71,71,71,71,71,-47,-46,71,71,71,71,-40,-41,71,71,-44,-45,71,71,71,71,71,71,-56,71,-61,-62,-63,71,71,]),'DIV':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[72,-48,-49,-50,-51,-52,-53,-54,-55,72,72,72,72,72,72,-47,-46,72,72,72,72,-40,-41,72,72,-44,-45,72,72,72,72,72,72,-56,72,-61,-62,-63,72,72,]),'DOTADD':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[73,-48,-49,-50,-51,-52,-53,-54,-55,73,73,73,73,73,73,-47,-46,73,73,-38,-39,-40,-41,-42,-43,-44,-45,73,73,73,73,73,73,-56,73,-61,-62,-63,73,73,]),'DOTMIN':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[74,-48,-49,-50,-51,-52,-53,-54,-55,74,74,74,74,74,74,-47,-46,74,74,-38,-39,-40,-41,-42,-43,-44,-45,74,74,74,74,74,74,-56,74,-61,-62,-63,74,74,]),'DOTMUL':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[75,-48,-49,-50,-51,-52,-53,-54,-55,75,75,75,75,75,75,-47,-46,75,75,75,75,-40,-41,75,75,-44,-45,75,75,75,75,75,75,-56,75,-61,-62,-63,75,75,]),'DOTDIV':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[76,-48,-49,-50,-51,-52,-53,-54,-55,76,76,76,76,76,76,-47,-46,76,76,76,76,-40,-41,76,76,-44,-45,76,76,76,76,76,76,-56,76,-61,-62,-63,76,76,]),'TRANSPOSE':([40,43,44,45,46,47,48,53,54,60,62,63,64,65,66,77,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,130,],[77,-48,-49,-50,-51,-52,-53,-54,-55,77,77,77,77,77,77,-47,-46,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-56,77,-61,-62,-63,77,77,]),'LT':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[78,-48,-49,-50,-51,-52,-53,-54,-55,78,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),'GT':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[79,-48,-49,-50,-51,-52,-53,-54,-55,79,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),'LTE':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[80,-48,-49,-50,-51,-52,-53,-54,-55,80,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),'GTE':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[81,-48,-49,-50,-51,-52,-53,-54,-55,81,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),'NE':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[82,-48,-49,-50,-51,-52,-53,-54,-55,82,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),'RELASSIGN':([40,43,44,45,46,47,48,53,54,60,77,84,97,98,99,100,101,102,103,104,111,124,125,126,],[83,-48,-49,-50,-51,-52,-53,-54,-55,83,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),',':([43,44,45,46,47,48,53,54,55,56,67,77,84,86,87,97,98,99,100,101,102,103,104,111,114,115,116,117,122,123,124,125,126,],[-48,-49,-50,-51,-52,-53,-54,-55,91,-66,96,-47,-46,113,-60,-38,-39,-40,-41,-42,-43,-44,-45,-56,91,91,91,-65,113,-59,-61,-62,-63,]),']':([43,44,45,46,47,48,53,54,77,84,85,86,87,97,98,99,100,101,102,103,104,111,121,122,123,124,125,126,],[-48,-49,-50,-51,-52,-53,-54,-55,-47,-46,111,-58,-60,-38,-39,-40,-41,-42,-43,-44,-45,-56,128,-57,-59,-61,-62,-63,]),':':([43,44,45,46,47,48,53,54,77,84,95,97,98,99,100,101,102,103,104,111,124,125,126,],[-48,-49,-50,-51,-52,-53,-54,-55,-47,-46,120,-38,-39,-40,-41,-42,-43,-44,-45,-56,-61,-62,-63,]),')':([43,44,45,46,47,48,53,54,56,59,77,84,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,115,116,117,124,125,126,],[-48,-49,-50,-51,-52,-53,-54,-55,-66,93,-47,-46,-38,-39,-40,-41,-42,-43,-44,-45,-32,-33,-34,-35,-36,-37,-56,124,125,126,-65,-61,-62,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,14,],[3,29,]),'instruction':([0,3,14,29,30,39,92,94,],[4,23,4,23,58,68,118,119,]),'block':([0,3,14,29,30,39,92,94,],[5,5,5,5,5,5,5,5,]),'if':([0,3,14,29,30,39,92,94,],[6,6,6,6,6,6,6,6,]),'for':([0,3,14,29,30,39,92,94,],[7,7,7,7,7,7,7,7,]),'while':([0,3,14,29,30,39,92,94,],[8,8,8,8,8,8,8,8,]),'break':([0,3,14,29,30,39,92,94,],[9,9,9,9,9,9,9,9,]),'continue':([0,3,14,29,30,39,92,94,],[10,10,10,10,10,10,10,10,]),'return':([0,3,14,29,30,39,92,94,],[11,11,11,11,11,11,11,11,]),'print':([0,3,14,29,30,39,92,94,],[12,12,12,12,12,12,12,12,]),'assign':([0,3,14,29,30,39,92,94,],[13,13,13,13,13,13,13,13,]),'BOOLEAN_IN_PARENTHESES':([15,18,],[30,39,]),'EXPRESSION':([21,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,112,113,120,129,],[40,60,62,63,64,65,66,84,87,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,87,123,127,130,]),'BOOLEAN_EXPRESSION':([21,31,],[41,59,]),'CONSTANT_EXPRESSION':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[43,56,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,56,56,56,117,43,43,43,43,]),'MATRIX':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'MATRIX_FUNCTIONS':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NUMBER':([21,22,31,33,34,35,36,37,42,49,61,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,90,91,112,113,120,129,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'MULTIPLE_EXPR':([22,88,89,90,],[55,114,115,116,]),'ROWS':([49,],[85,]),'ROW':([49,112,],[86,122,]),'RANGE':([61,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',23),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',28),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt2','Mparser.py',34),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',40),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',41),
  ('block -> { instructions }','block',3,'p_block','Mparser.py',52),
  ('instruction -> block','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> for','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> while','instruction',1,'p_instruction','Mparser.py',60),
  ('instruction -> break ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> continue ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> return ;','instruction',2,'p_instruction','Mparser.py',63),
  ('instruction -> print ;','instruction',2,'p_instruction','Mparser.py',64),
  ('instruction -> assign ;','instruction',2,'p_instruction','Mparser.py',65),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction','if',3,'p_if','Mparser.py',70),
  ('if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction','if',5,'p_if','Mparser.py',71),
  ('for -> FOR ID ASSIGN RANGE instruction','for',5,'p_for','Mparser.py',80),
  ('RANGE -> EXPRESSION : EXPRESSION','RANGE',3,'p_range1','Mparser.py',88),
  ('while -> WHILE BOOLEAN_IN_PARENTHESES instruction','while',3,'p_while','Mparser.py',94),
  ('break -> BREAK','break',1,'p_break','Mparser.py',100),
  ('continue -> CONTINUE','continue',1,'p_continue','Mparser.py',106),
  ('return -> RETURN','return',1,'p_return','Mparser.py',112),
  ('return -> RETURN EXPRESSION','return',2,'p_return','Mparser.py',113),
  ('return -> RETURN BOOLEAN_EXPRESSION','return',2,'p_return','Mparser.py',114),
  ('assign -> ID ASSIGN EXPRESSION','assign',3,'p_expression_assignment','Mparser.py',126),
  ('assign -> ID ADDASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',131),
  ('assign -> ID MINASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',132),
  ('assign -> ID MULASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',133),
  ('assign -> ID DIVASSIGN EXPRESSION','assign',3,'p_expression_assignment1','Mparser.py',134),
  ('assign -> ID [ INT , INT ] ASSIGN EXPRESSION','assign',8,'p_expression_assignment_ref','Mparser.py',140),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',149),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',150),
  ('BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',151),
  ('BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',152),
  ('BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',153),
  ('BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION','BOOLEAN_EXPRESSION',3,'p_expression_rel','Mparser.py',154),
  ('EXPRESSION -> EXPRESSION ADD EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',161),
  ('EXPRESSION -> EXPRESSION MIN EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',162),
  ('EXPRESSION -> EXPRESSION MUL EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',163),
  ('EXPRESSION -> EXPRESSION DIV EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',164),
  ('EXPRESSION -> EXPRESSION DOTADD EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',170),
  ('EXPRESSION -> EXPRESSION DOTMIN EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',171),
  ('EXPRESSION -> EXPRESSION DOTMUL EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',172),
  ('EXPRESSION -> EXPRESSION DOTDIV EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',173),
  ('EXPRESSION -> MIN EXPRESSION','EXPRESSION',2,'p_expr_uminus','Mparser.py',179),
  ('EXPRESSION -> EXPRESSION TRANSPOSE','EXPRESSION',2,'p_transpose','Mparser.py',186),
  ('EXPRESSION -> CONSTANT_EXPRESSION','EXPRESSION',1,'p_expression','Mparser.py',192),
  ('CONSTANT_EXPRESSION -> MATRIX','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',197),
  ('CONSTANT_EXPRESSION -> MATRIX_FUNCTIONS','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',198),
  ('CONSTANT_EXPRESSION -> NUMBER','CONSTANT_EXPRESSION',1,'p_constant_expression_1','Mparser.py',199),
  ('CONSTANT_EXPRESSION -> STR','CONSTANT_EXPRESSION',1,'p_constant_expression_2','Mparser.py',204),
  ('CONSTANT_EXPRESSION -> ID','CONSTANT_EXPRESSION',1,'p_constant_expression_3','Mparser.py',210),
  ('NUMBER -> INT','NUMBER',1,'p_number_int','Mparser.py',216),
  ('NUMBER -> FLOAT','NUMBER',1,'p_number_int','Mparser.py',217),
  ('MATRIX -> [ ROWS ]','MATRIX',3,'p_matrix','Mparser.py',223),
  ('ROWS -> ROWS ; ROW','ROWS',3,'p_matrix_rows','Mparser.py',229),
  ('ROWS -> ROW','ROWS',1,'p_matrix_rows','Mparser.py',230),
  ('ROW -> ROW , EXPRESSION','ROW',3,'p_matrix_row','Mparser.py',240),
  ('ROW -> EXPRESSION','ROW',1,'p_matrix_row','Mparser.py',241),
  ('MATRIX_FUNCTIONS -> EYE ( MULTIPLE_EXPR )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',253),
  ('MATRIX_FUNCTIONS -> ZEROS ( MULTIPLE_EXPR )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',254),
  ('MATRIX_FUNCTIONS -> ONES ( MULTIPLE_EXPR )','MATRIX_FUNCTIONS',4,'p_expression_matrix_functions','Mparser.py',255),
  ('BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION )','BOOLEAN_IN_PARENTHESES',3,'p_boolean_in_parentheses','Mparser.py',262),
  ('MULTIPLE_EXPR -> MULTIPLE_EXPR , CONSTANT_EXPRESSION','MULTIPLE_EXPR',3,'p_multiple_expression','Mparser.py',267),
  ('MULTIPLE_EXPR -> CONSTANT_EXPRESSION','MULTIPLE_EXPR',1,'p_multiple_expression','Mparser.py',268),
  ('print -> PRINT MULTIPLE_EXPR','print',2,'p_print','Mparser.py',277),
]
