Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COM
    IGN
    NL

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     block -> { instructions }
Rule 7     instruction -> block
Rule 8     instruction -> if
Rule 9     instruction -> for
Rule 10    instruction -> while
Rule 11    instruction -> break ;
Rule 12    instruction -> continue ;
Rule 13    instruction -> return ;
Rule 14    instruction -> print ;
Rule 15    instruction -> assign ;
Rule 16    if -> IF BOOLEAN_IN_PARENTHESES instruction
Rule 17    if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
Rule 18    for -> FOR ID ASSIGN RANGE instruction
Rule 19    RANGE -> EXPRESSION : EXPRESSION
Rule 20    while -> WHILE BOOLEAN_IN_PARENTHESES instruction
Rule 21    break -> BREAK
Rule 22    continue -> CONTINUE
Rule 23    return -> RETURN
Rule 24    return -> RETURN EXPRESSION
Rule 25    return -> RETURN BOOLEAN_EXPRESSION
Rule 26    assign -> ID ASSIGN EXPRESSION
Rule 27    assign -> ID ADDASSIGN EXPRESSION
Rule 28    assign -> ID MINASSIGN EXPRESSION
Rule 29    assign -> ID MULASSIGN EXPRESSION
Rule 30    assign -> ID DIVASSIGN EXPRESSION
Rule 31    assign -> REF ASSIGN EXPRESSION
Rule 32    REF -> ID [ EXPRESSION , EXPRESSION ]
Rule 33    BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION
Rule 34    BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION
Rule 35    BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION
Rule 36    BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION
Rule 37    BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION
Rule 38    BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION
Rule 39    EXPRESSION -> EXPRESSION ADD EXPRESSION
Rule 40    EXPRESSION -> EXPRESSION MIN EXPRESSION
Rule 41    EXPRESSION -> EXPRESSION MUL EXPRESSION
Rule 42    EXPRESSION -> EXPRESSION DIV EXPRESSION
Rule 43    EXPRESSION -> EXPRESSION DOTADD EXPRESSION
Rule 44    EXPRESSION -> EXPRESSION DOTMIN EXPRESSION
Rule 45    EXPRESSION -> EXPRESSION DOTMUL EXPRESSION
Rule 46    EXPRESSION -> EXPRESSION DOTDIV EXPRESSION
Rule 47    EXPRESSION -> MIN EXPRESSION
Rule 48    EXPRESSION -> EXPRESSION TRANSPOSE
Rule 49    EXPRESSION -> MATRIX
Rule 50    EXPRESSION -> MATRIX_FUNCTIONS
Rule 51    EXPRESSION -> REF
Rule 52    EXPRESSION -> NUMBER
Rule 53    EXPRESSION -> STR
Rule 54    EXPRESSION -> ID
Rule 55    NUMBER -> INT
Rule 56    NUMBER -> FLOAT
Rule 57    MATRIX -> [ ROWS ]
Rule 58    ROWS -> ROWS ; ROW
Rule 59    ROWS -> ROW
Rule 60    ROW -> ROW , EXPRESSION
Rule 61    ROW -> EXPRESSION
Rule 62    MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION )
Rule 63    MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
Rule 64    MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION )
Rule 65    BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION )
Rule 66    MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION
Rule 67    MULTIPLE_EXPR -> EXPRESSION
Rule 68    MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION
Rule 69    MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION
Rule 70    print -> PRINT MULTIPLE_EXPR

Terminals, with rules where they appear

(                    : 62 63 64 65
)                    : 62 63 64 65
,                    : 32 60 66 68
:                    : 19
;                    : 11 12 13 14 15 58
ADD                  : 39
ADDASSIGN            : 27
ASSIGN               : 18 26 31
BREAK                : 21
COM                  : 
CONTINUE             : 22
DIV                  : 42
DIVASSIGN            : 30
DOTADD               : 43
DOTDIV               : 46
DOTMIN               : 44
DOTMUL               : 45
ELSE                 : 17
EYE                  : 62
FLOAT                : 56
FOR                  : 18
GT                   : 34
GTE                  : 36
ID                   : 18 26 27 28 29 30 32 54
IF                   : 16 17
IGN                  : 
INT                  : 55
LT                   : 33
LTE                  : 35
MIN                  : 40 47
MINASSIGN            : 28
MUL                  : 41
MULASSIGN            : 29
NE                   : 37
NL                   : 
ONES                 : 64
PRINT                : 70
RELASSIGN            : 38
RETURN               : 23 24 25
STR                  : 53
TRANSPOSE            : 48
WHILE                : 20
ZEROS                : 63
[                    : 32 57
]                    : 32 57
error                : 
{                    : 6
}                    : 6

Nonterminals, with rules where they appear

BOOLEAN_EXPRESSION   : 25 65
BOOLEAN_IN_PARENTHESES : 16 17 20
EXPRESSION           : 19 19 24 26 27 28 29 30 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 60 61 66 67 68 69
MATRIX               : 49
MATRIX_FUNCTIONS     : 50
MATRIX_FUNCTIONS_EXPRESSION : 62 63 64 68
MULTIPLE_EXPR        : 66 70
NUMBER               : 52
RANGE                : 18
REF                  : 31 51
ROW                  : 58 59 60
ROWS                 : 57 58
assign               : 15
block                : 7
break                : 11
continue             : 12
for                  : 9
if                   : 8
instruction          : 4 5 16 17 17 18 20
instructions         : 2 4 6
instructions_opt     : 1
print                : 14
program              : 0
return               : 13
while                : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 24
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (7) instruction -> block .

    {               reduce using rule 7 (instruction -> block .)
    IF              reduce using rule 7 (instruction -> block .)
    FOR             reduce using rule 7 (instruction -> block .)
    WHILE           reduce using rule 7 (instruction -> block .)
    BREAK           reduce using rule 7 (instruction -> block .)
    CONTINUE        reduce using rule 7 (instruction -> block .)
    RETURN          reduce using rule 7 (instruction -> block .)
    PRINT           reduce using rule 7 (instruction -> block .)
    ID              reduce using rule 7 (instruction -> block .)
    $end            reduce using rule 7 (instruction -> block .)
    }               reduce using rule 7 (instruction -> block .)
    ELSE            reduce using rule 7 (instruction -> block .)


state 6

    (8) instruction -> if .

    {               reduce using rule 8 (instruction -> if .)
    IF              reduce using rule 8 (instruction -> if .)
    FOR             reduce using rule 8 (instruction -> if .)
    WHILE           reduce using rule 8 (instruction -> if .)
    BREAK           reduce using rule 8 (instruction -> if .)
    CONTINUE        reduce using rule 8 (instruction -> if .)
    RETURN          reduce using rule 8 (instruction -> if .)
    PRINT           reduce using rule 8 (instruction -> if .)
    ID              reduce using rule 8 (instruction -> if .)
    $end            reduce using rule 8 (instruction -> if .)
    }               reduce using rule 8 (instruction -> if .)
    ELSE            reduce using rule 8 (instruction -> if .)


state 7

    (9) instruction -> for .

    {               reduce using rule 9 (instruction -> for .)
    IF              reduce using rule 9 (instruction -> for .)
    FOR             reduce using rule 9 (instruction -> for .)
    WHILE           reduce using rule 9 (instruction -> for .)
    BREAK           reduce using rule 9 (instruction -> for .)
    CONTINUE        reduce using rule 9 (instruction -> for .)
    RETURN          reduce using rule 9 (instruction -> for .)
    PRINT           reduce using rule 9 (instruction -> for .)
    ID              reduce using rule 9 (instruction -> for .)
    $end            reduce using rule 9 (instruction -> for .)
    }               reduce using rule 9 (instruction -> for .)
    ELSE            reduce using rule 9 (instruction -> for .)


state 8

    (10) instruction -> while .

    {               reduce using rule 10 (instruction -> while .)
    IF              reduce using rule 10 (instruction -> while .)
    FOR             reduce using rule 10 (instruction -> while .)
    WHILE           reduce using rule 10 (instruction -> while .)
    BREAK           reduce using rule 10 (instruction -> while .)
    CONTINUE        reduce using rule 10 (instruction -> while .)
    RETURN          reduce using rule 10 (instruction -> while .)
    PRINT           reduce using rule 10 (instruction -> while .)
    ID              reduce using rule 10 (instruction -> while .)
    $end            reduce using rule 10 (instruction -> while .)
    }               reduce using rule 10 (instruction -> while .)
    ELSE            reduce using rule 10 (instruction -> while .)


state 9

    (11) instruction -> break . ;

    ;               shift and go to state 25


state 10

    (12) instruction -> continue . ;

    ;               shift and go to state 26


state 11

    (13) instruction -> return . ;

    ;               shift and go to state 27


state 12

    (14) instruction -> print . ;

    ;               shift and go to state 28


state 13

    (15) instruction -> assign . ;

    ;               shift and go to state 29


state 14

    (6) block -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instructions                   shift and go to state 30
    instruction                    shift and go to state 4
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 15

    (16) if -> IF . BOOLEAN_IN_PARENTHESES instruction
    (17) if -> IF . BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (65) BOOLEAN_IN_PARENTHESES -> . ( BOOLEAN_EXPRESSION )

    (               shift and go to state 32

    BOOLEAN_IN_PARENTHESES         shift and go to state 31

state 16

    (18) for -> FOR . ID ASSIGN RANGE instruction

    ID              shift and go to state 33


state 17

    (26) assign -> ID . ASSIGN EXPRESSION
    (27) assign -> ID . ADDASSIGN EXPRESSION
    (28) assign -> ID . MINASSIGN EXPRESSION
    (29) assign -> ID . MULASSIGN EXPRESSION
    (30) assign -> ID . DIVASSIGN EXPRESSION
    (32) REF -> ID . [ EXPRESSION , EXPRESSION ]

    ASSIGN          shift and go to state 34
    ADDASSIGN       shift and go to state 35
    MINASSIGN       shift and go to state 36
    MULASSIGN       shift and go to state 37
    DIVASSIGN       shift and go to state 38
    [               shift and go to state 39


state 18

    (20) while -> WHILE . BOOLEAN_IN_PARENTHESES instruction
    (65) BOOLEAN_IN_PARENTHESES -> . ( BOOLEAN_EXPRESSION )

    (               shift and go to state 32

    BOOLEAN_IN_PARENTHESES         shift and go to state 40

state 19

    (21) break -> BREAK .

    ;               reduce using rule 21 (break -> BREAK .)


state 20

    (22) continue -> CONTINUE .

    ;               reduce using rule 22 (continue -> CONTINUE .)


state 21

    (23) return -> RETURN .
    (24) return -> RETURN . EXPRESSION
    (25) return -> RETURN . BOOLEAN_EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (33) BOOLEAN_EXPRESSION -> . EXPRESSION LT EXPRESSION
    (34) BOOLEAN_EXPRESSION -> . EXPRESSION GT EXPRESSION
    (35) BOOLEAN_EXPRESSION -> . EXPRESSION LTE EXPRESSION
    (36) BOOLEAN_EXPRESSION -> . EXPRESSION GTE EXPRESSION
    (37) BOOLEAN_EXPRESSION -> . EXPRESSION NE EXPRESSION
    (38) BOOLEAN_EXPRESSION -> . EXPRESSION RELASSIGN EXPRESSION
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    ;               reduce using rule 23 (return -> RETURN .)
    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 41
    BOOLEAN_EXPRESSION             shift and go to state 42
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 22

    (70) print -> PRINT . MULTIPLE_EXPR
    (66) MULTIPLE_EXPR -> . MULTIPLE_EXPR , EXPRESSION
    (67) MULTIPLE_EXPR -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    MULTIPLE_EXPR                  shift and go to state 56
    EXPRESSION                     shift and go to state 57
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 23

    (31) assign -> REF . ASSIGN EXPRESSION

    ASSIGN          shift and go to state 58


state 24

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 25

    (11) instruction -> break ; .

    {               reduce using rule 11 (instruction -> break ; .)
    IF              reduce using rule 11 (instruction -> break ; .)
    FOR             reduce using rule 11 (instruction -> break ; .)
    WHILE           reduce using rule 11 (instruction -> break ; .)
    BREAK           reduce using rule 11 (instruction -> break ; .)
    CONTINUE        reduce using rule 11 (instruction -> break ; .)
    RETURN          reduce using rule 11 (instruction -> break ; .)
    PRINT           reduce using rule 11 (instruction -> break ; .)
    ID              reduce using rule 11 (instruction -> break ; .)
    $end            reduce using rule 11 (instruction -> break ; .)
    }               reduce using rule 11 (instruction -> break ; .)
    ELSE            reduce using rule 11 (instruction -> break ; .)


state 26

    (12) instruction -> continue ; .

    {               reduce using rule 12 (instruction -> continue ; .)
    IF              reduce using rule 12 (instruction -> continue ; .)
    FOR             reduce using rule 12 (instruction -> continue ; .)
    WHILE           reduce using rule 12 (instruction -> continue ; .)
    BREAK           reduce using rule 12 (instruction -> continue ; .)
    CONTINUE        reduce using rule 12 (instruction -> continue ; .)
    RETURN          reduce using rule 12 (instruction -> continue ; .)
    PRINT           reduce using rule 12 (instruction -> continue ; .)
    ID              reduce using rule 12 (instruction -> continue ; .)
    $end            reduce using rule 12 (instruction -> continue ; .)
    }               reduce using rule 12 (instruction -> continue ; .)
    ELSE            reduce using rule 12 (instruction -> continue ; .)


state 27

    (13) instruction -> return ; .

    {               reduce using rule 13 (instruction -> return ; .)
    IF              reduce using rule 13 (instruction -> return ; .)
    FOR             reduce using rule 13 (instruction -> return ; .)
    WHILE           reduce using rule 13 (instruction -> return ; .)
    BREAK           reduce using rule 13 (instruction -> return ; .)
    CONTINUE        reduce using rule 13 (instruction -> return ; .)
    RETURN          reduce using rule 13 (instruction -> return ; .)
    PRINT           reduce using rule 13 (instruction -> return ; .)
    ID              reduce using rule 13 (instruction -> return ; .)
    $end            reduce using rule 13 (instruction -> return ; .)
    }               reduce using rule 13 (instruction -> return ; .)
    ELSE            reduce using rule 13 (instruction -> return ; .)


state 28

    (14) instruction -> print ; .

    {               reduce using rule 14 (instruction -> print ; .)
    IF              reduce using rule 14 (instruction -> print ; .)
    FOR             reduce using rule 14 (instruction -> print ; .)
    WHILE           reduce using rule 14 (instruction -> print ; .)
    BREAK           reduce using rule 14 (instruction -> print ; .)
    CONTINUE        reduce using rule 14 (instruction -> print ; .)
    RETURN          reduce using rule 14 (instruction -> print ; .)
    PRINT           reduce using rule 14 (instruction -> print ; .)
    ID              reduce using rule 14 (instruction -> print ; .)
    $end            reduce using rule 14 (instruction -> print ; .)
    }               reduce using rule 14 (instruction -> print ; .)
    ELSE            reduce using rule 14 (instruction -> print ; .)


state 29

    (15) instruction -> assign ; .

    {               reduce using rule 15 (instruction -> assign ; .)
    IF              reduce using rule 15 (instruction -> assign ; .)
    FOR             reduce using rule 15 (instruction -> assign ; .)
    WHILE           reduce using rule 15 (instruction -> assign ; .)
    BREAK           reduce using rule 15 (instruction -> assign ; .)
    CONTINUE        reduce using rule 15 (instruction -> assign ; .)
    RETURN          reduce using rule 15 (instruction -> assign ; .)
    PRINT           reduce using rule 15 (instruction -> assign ; .)
    ID              reduce using rule 15 (instruction -> assign ; .)
    $end            reduce using rule 15 (instruction -> assign ; .)
    }               reduce using rule 15 (instruction -> assign ; .)
    ELSE            reduce using rule 15 (instruction -> assign ; .)


state 30

    (6) block -> { instructions . }
    (4) instructions -> instructions . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    }               shift and go to state 59
    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 24
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 31

    (16) if -> IF BOOLEAN_IN_PARENTHESES . instruction
    (17) if -> IF BOOLEAN_IN_PARENTHESES . instruction ELSE instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 60
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 32

    (65) BOOLEAN_IN_PARENTHESES -> ( . BOOLEAN_EXPRESSION )
    (33) BOOLEAN_EXPRESSION -> . EXPRESSION LT EXPRESSION
    (34) BOOLEAN_EXPRESSION -> . EXPRESSION GT EXPRESSION
    (35) BOOLEAN_EXPRESSION -> . EXPRESSION LTE EXPRESSION
    (36) BOOLEAN_EXPRESSION -> . EXPRESSION GTE EXPRESSION
    (37) BOOLEAN_EXPRESSION -> . EXPRESSION NE EXPRESSION
    (38) BOOLEAN_EXPRESSION -> . EXPRESSION RELASSIGN EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    BOOLEAN_EXPRESSION             shift and go to state 61
    EXPRESSION                     shift and go to state 62
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 33

    (18) for -> FOR ID . ASSIGN RANGE instruction

    ASSIGN          shift and go to state 63


state 34

    (26) assign -> ID ASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 64
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 35

    (27) assign -> ID ADDASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 65
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 36

    (28) assign -> ID MINASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 66
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 37

    (29) assign -> ID MULASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 67
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 38

    (30) assign -> ID DIVASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 68
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 39

    (32) REF -> ID [ . EXPRESSION , EXPRESSION ]
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 69
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 40

    (20) while -> WHILE BOOLEAN_IN_PARENTHESES . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 70
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 41

    (24) return -> RETURN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE
    (33) BOOLEAN_EXPRESSION -> EXPRESSION . LT EXPRESSION
    (34) BOOLEAN_EXPRESSION -> EXPRESSION . GT EXPRESSION
    (35) BOOLEAN_EXPRESSION -> EXPRESSION . LTE EXPRESSION
    (36) BOOLEAN_EXPRESSION -> EXPRESSION . GTE EXPRESSION
    (37) BOOLEAN_EXPRESSION -> EXPRESSION . NE EXPRESSION
    (38) BOOLEAN_EXPRESSION -> EXPRESSION . RELASSIGN EXPRESSION

    ;               reduce using rule 24 (return -> RETURN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79
    LT              shift and go to state 80
    GT              shift and go to state 81
    LTE             shift and go to state 82
    GTE             shift and go to state 83
    NE              shift and go to state 84
    RELASSIGN       shift and go to state 85


state 42

    (25) return -> RETURN BOOLEAN_EXPRESSION .

    ;               reduce using rule 25 (return -> RETURN BOOLEAN_EXPRESSION .)


state 43

    (47) EXPRESSION -> MIN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 86
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 44

    (49) EXPRESSION -> MATRIX .

    ADD             reduce using rule 49 (EXPRESSION -> MATRIX .)
    MIN             reduce using rule 49 (EXPRESSION -> MATRIX .)
    MUL             reduce using rule 49 (EXPRESSION -> MATRIX .)
    DIV             reduce using rule 49 (EXPRESSION -> MATRIX .)
    DOTADD          reduce using rule 49 (EXPRESSION -> MATRIX .)
    DOTMIN          reduce using rule 49 (EXPRESSION -> MATRIX .)
    DOTMUL          reduce using rule 49 (EXPRESSION -> MATRIX .)
    DOTDIV          reduce using rule 49 (EXPRESSION -> MATRIX .)
    TRANSPOSE       reduce using rule 49 (EXPRESSION -> MATRIX .)
    LT              reduce using rule 49 (EXPRESSION -> MATRIX .)
    GT              reduce using rule 49 (EXPRESSION -> MATRIX .)
    LTE             reduce using rule 49 (EXPRESSION -> MATRIX .)
    GTE             reduce using rule 49 (EXPRESSION -> MATRIX .)
    NE              reduce using rule 49 (EXPRESSION -> MATRIX .)
    RELASSIGN       reduce using rule 49 (EXPRESSION -> MATRIX .)
    ;               reduce using rule 49 (EXPRESSION -> MATRIX .)
    ,               reduce using rule 49 (EXPRESSION -> MATRIX .)
    ]               reduce using rule 49 (EXPRESSION -> MATRIX .)
    :               reduce using rule 49 (EXPRESSION -> MATRIX .)
    )               reduce using rule 49 (EXPRESSION -> MATRIX .)
    {               reduce using rule 49 (EXPRESSION -> MATRIX .)
    IF              reduce using rule 49 (EXPRESSION -> MATRIX .)
    FOR             reduce using rule 49 (EXPRESSION -> MATRIX .)
    WHILE           reduce using rule 49 (EXPRESSION -> MATRIX .)
    BREAK           reduce using rule 49 (EXPRESSION -> MATRIX .)
    CONTINUE        reduce using rule 49 (EXPRESSION -> MATRIX .)
    RETURN          reduce using rule 49 (EXPRESSION -> MATRIX .)
    PRINT           reduce using rule 49 (EXPRESSION -> MATRIX .)
    ID              reduce using rule 49 (EXPRESSION -> MATRIX .)


state 45

    (50) EXPRESSION -> MATRIX_FUNCTIONS .

    ADD             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    MIN             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    MUL             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    DIV             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    DOTADD          reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    DOTMIN          reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    DOTMUL          reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    DOTDIV          reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    TRANSPOSE       reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    LT              reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    GT              reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    LTE             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    GTE             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    NE              reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    RELASSIGN       reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    ;               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    ,               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    ]               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    :               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    )               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    {               reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    IF              reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    FOR             reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    WHILE           reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    BREAK           reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    CONTINUE        reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    RETURN          reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    PRINT           reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)
    ID              reduce using rule 50 (EXPRESSION -> MATRIX_FUNCTIONS .)


state 46

    (51) EXPRESSION -> REF .

    ADD             reduce using rule 51 (EXPRESSION -> REF .)
    MIN             reduce using rule 51 (EXPRESSION -> REF .)
    MUL             reduce using rule 51 (EXPRESSION -> REF .)
    DIV             reduce using rule 51 (EXPRESSION -> REF .)
    DOTADD          reduce using rule 51 (EXPRESSION -> REF .)
    DOTMIN          reduce using rule 51 (EXPRESSION -> REF .)
    DOTMUL          reduce using rule 51 (EXPRESSION -> REF .)
    DOTDIV          reduce using rule 51 (EXPRESSION -> REF .)
    TRANSPOSE       reduce using rule 51 (EXPRESSION -> REF .)
    LT              reduce using rule 51 (EXPRESSION -> REF .)
    GT              reduce using rule 51 (EXPRESSION -> REF .)
    LTE             reduce using rule 51 (EXPRESSION -> REF .)
    GTE             reduce using rule 51 (EXPRESSION -> REF .)
    NE              reduce using rule 51 (EXPRESSION -> REF .)
    RELASSIGN       reduce using rule 51 (EXPRESSION -> REF .)
    ;               reduce using rule 51 (EXPRESSION -> REF .)
    ,               reduce using rule 51 (EXPRESSION -> REF .)
    ]               reduce using rule 51 (EXPRESSION -> REF .)
    :               reduce using rule 51 (EXPRESSION -> REF .)
    )               reduce using rule 51 (EXPRESSION -> REF .)
    {               reduce using rule 51 (EXPRESSION -> REF .)
    IF              reduce using rule 51 (EXPRESSION -> REF .)
    FOR             reduce using rule 51 (EXPRESSION -> REF .)
    WHILE           reduce using rule 51 (EXPRESSION -> REF .)
    BREAK           reduce using rule 51 (EXPRESSION -> REF .)
    CONTINUE        reduce using rule 51 (EXPRESSION -> REF .)
    RETURN          reduce using rule 51 (EXPRESSION -> REF .)
    PRINT           reduce using rule 51 (EXPRESSION -> REF .)
    ID              reduce using rule 51 (EXPRESSION -> REF .)


state 47

    (52) EXPRESSION -> NUMBER .

    ADD             reduce using rule 52 (EXPRESSION -> NUMBER .)
    MIN             reduce using rule 52 (EXPRESSION -> NUMBER .)
    MUL             reduce using rule 52 (EXPRESSION -> NUMBER .)
    DIV             reduce using rule 52 (EXPRESSION -> NUMBER .)
    DOTADD          reduce using rule 52 (EXPRESSION -> NUMBER .)
    DOTMIN          reduce using rule 52 (EXPRESSION -> NUMBER .)
    DOTMUL          reduce using rule 52 (EXPRESSION -> NUMBER .)
    DOTDIV          reduce using rule 52 (EXPRESSION -> NUMBER .)
    TRANSPOSE       reduce using rule 52 (EXPRESSION -> NUMBER .)
    LT              reduce using rule 52 (EXPRESSION -> NUMBER .)
    GT              reduce using rule 52 (EXPRESSION -> NUMBER .)
    LTE             reduce using rule 52 (EXPRESSION -> NUMBER .)
    GTE             reduce using rule 52 (EXPRESSION -> NUMBER .)
    NE              reduce using rule 52 (EXPRESSION -> NUMBER .)
    RELASSIGN       reduce using rule 52 (EXPRESSION -> NUMBER .)
    ;               reduce using rule 52 (EXPRESSION -> NUMBER .)
    ,               reduce using rule 52 (EXPRESSION -> NUMBER .)
    ]               reduce using rule 52 (EXPRESSION -> NUMBER .)
    :               reduce using rule 52 (EXPRESSION -> NUMBER .)
    )               reduce using rule 52 (EXPRESSION -> NUMBER .)
    {               reduce using rule 52 (EXPRESSION -> NUMBER .)
    IF              reduce using rule 52 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 52 (EXPRESSION -> NUMBER .)
    WHILE           reduce using rule 52 (EXPRESSION -> NUMBER .)
    BREAK           reduce using rule 52 (EXPRESSION -> NUMBER .)
    CONTINUE        reduce using rule 52 (EXPRESSION -> NUMBER .)
    RETURN          reduce using rule 52 (EXPRESSION -> NUMBER .)
    PRINT           reduce using rule 52 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 52 (EXPRESSION -> NUMBER .)


state 48

    (53) EXPRESSION -> STR .

    ADD             reduce using rule 53 (EXPRESSION -> STR .)
    MIN             reduce using rule 53 (EXPRESSION -> STR .)
    MUL             reduce using rule 53 (EXPRESSION -> STR .)
    DIV             reduce using rule 53 (EXPRESSION -> STR .)
    DOTADD          reduce using rule 53 (EXPRESSION -> STR .)
    DOTMIN          reduce using rule 53 (EXPRESSION -> STR .)
    DOTMUL          reduce using rule 53 (EXPRESSION -> STR .)
    DOTDIV          reduce using rule 53 (EXPRESSION -> STR .)
    TRANSPOSE       reduce using rule 53 (EXPRESSION -> STR .)
    LT              reduce using rule 53 (EXPRESSION -> STR .)
    GT              reduce using rule 53 (EXPRESSION -> STR .)
    LTE             reduce using rule 53 (EXPRESSION -> STR .)
    GTE             reduce using rule 53 (EXPRESSION -> STR .)
    NE              reduce using rule 53 (EXPRESSION -> STR .)
    RELASSIGN       reduce using rule 53 (EXPRESSION -> STR .)
    ;               reduce using rule 53 (EXPRESSION -> STR .)
    ,               reduce using rule 53 (EXPRESSION -> STR .)
    ]               reduce using rule 53 (EXPRESSION -> STR .)
    :               reduce using rule 53 (EXPRESSION -> STR .)
    )               reduce using rule 53 (EXPRESSION -> STR .)
    {               reduce using rule 53 (EXPRESSION -> STR .)
    IF              reduce using rule 53 (EXPRESSION -> STR .)
    FOR             reduce using rule 53 (EXPRESSION -> STR .)
    WHILE           reduce using rule 53 (EXPRESSION -> STR .)
    BREAK           reduce using rule 53 (EXPRESSION -> STR .)
    CONTINUE        reduce using rule 53 (EXPRESSION -> STR .)
    RETURN          reduce using rule 53 (EXPRESSION -> STR .)
    PRINT           reduce using rule 53 (EXPRESSION -> STR .)
    ID              reduce using rule 53 (EXPRESSION -> STR .)


state 49

    (54) EXPRESSION -> ID .
    (32) REF -> ID . [ EXPRESSION , EXPRESSION ]

    ADD             reduce using rule 54 (EXPRESSION -> ID .)
    MIN             reduce using rule 54 (EXPRESSION -> ID .)
    MUL             reduce using rule 54 (EXPRESSION -> ID .)
    DIV             reduce using rule 54 (EXPRESSION -> ID .)
    DOTADD          reduce using rule 54 (EXPRESSION -> ID .)
    DOTMIN          reduce using rule 54 (EXPRESSION -> ID .)
    DOTMUL          reduce using rule 54 (EXPRESSION -> ID .)
    DOTDIV          reduce using rule 54 (EXPRESSION -> ID .)
    TRANSPOSE       reduce using rule 54 (EXPRESSION -> ID .)
    LT              reduce using rule 54 (EXPRESSION -> ID .)
    GT              reduce using rule 54 (EXPRESSION -> ID .)
    LTE             reduce using rule 54 (EXPRESSION -> ID .)
    GTE             reduce using rule 54 (EXPRESSION -> ID .)
    NE              reduce using rule 54 (EXPRESSION -> ID .)
    RELASSIGN       reduce using rule 54 (EXPRESSION -> ID .)
    ;               reduce using rule 54 (EXPRESSION -> ID .)
    ,               reduce using rule 54 (EXPRESSION -> ID .)
    ]               reduce using rule 54 (EXPRESSION -> ID .)
    :               reduce using rule 54 (EXPRESSION -> ID .)
    )               reduce using rule 54 (EXPRESSION -> ID .)
    {               reduce using rule 54 (EXPRESSION -> ID .)
    IF              reduce using rule 54 (EXPRESSION -> ID .)
    FOR             reduce using rule 54 (EXPRESSION -> ID .)
    WHILE           reduce using rule 54 (EXPRESSION -> ID .)
    BREAK           reduce using rule 54 (EXPRESSION -> ID .)
    CONTINUE        reduce using rule 54 (EXPRESSION -> ID .)
    RETURN          reduce using rule 54 (EXPRESSION -> ID .)
    PRINT           reduce using rule 54 (EXPRESSION -> ID .)
    ID              reduce using rule 54 (EXPRESSION -> ID .)
    [               shift and go to state 39


state 50

    (57) MATRIX -> [ . ROWS ]
    (58) ROWS -> . ROWS ; ROW
    (59) ROWS -> . ROW
    (60) ROW -> . ROW , EXPRESSION
    (61) ROW -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    ROWS                           shift and go to state 87
    ROW                            shift and go to state 88
    EXPRESSION                     shift and go to state 89
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 51

    (62) MATRIX_FUNCTIONS -> EYE . ( MATRIX_FUNCTIONS_EXPRESSION )

    (               shift and go to state 90


state 52

    (63) MATRIX_FUNCTIONS -> ZEROS . ( MATRIX_FUNCTIONS_EXPRESSION )

    (               shift and go to state 91


state 53

    (64) MATRIX_FUNCTIONS -> ONES . ( MATRIX_FUNCTIONS_EXPRESSION )

    (               shift and go to state 92


state 54

    (55) NUMBER -> INT .

    ADD             reduce using rule 55 (NUMBER -> INT .)
    MIN             reduce using rule 55 (NUMBER -> INT .)
    MUL             reduce using rule 55 (NUMBER -> INT .)
    DIV             reduce using rule 55 (NUMBER -> INT .)
    DOTADD          reduce using rule 55 (NUMBER -> INT .)
    DOTMIN          reduce using rule 55 (NUMBER -> INT .)
    DOTMUL          reduce using rule 55 (NUMBER -> INT .)
    DOTDIV          reduce using rule 55 (NUMBER -> INT .)
    TRANSPOSE       reduce using rule 55 (NUMBER -> INT .)
    LT              reduce using rule 55 (NUMBER -> INT .)
    GT              reduce using rule 55 (NUMBER -> INT .)
    LTE             reduce using rule 55 (NUMBER -> INT .)
    GTE             reduce using rule 55 (NUMBER -> INT .)
    NE              reduce using rule 55 (NUMBER -> INT .)
    RELASSIGN       reduce using rule 55 (NUMBER -> INT .)
    ;               reduce using rule 55 (NUMBER -> INT .)
    ,               reduce using rule 55 (NUMBER -> INT .)
    ]               reduce using rule 55 (NUMBER -> INT .)
    :               reduce using rule 55 (NUMBER -> INT .)
    )               reduce using rule 55 (NUMBER -> INT .)
    {               reduce using rule 55 (NUMBER -> INT .)
    IF              reduce using rule 55 (NUMBER -> INT .)
    FOR             reduce using rule 55 (NUMBER -> INT .)
    WHILE           reduce using rule 55 (NUMBER -> INT .)
    BREAK           reduce using rule 55 (NUMBER -> INT .)
    CONTINUE        reduce using rule 55 (NUMBER -> INT .)
    RETURN          reduce using rule 55 (NUMBER -> INT .)
    PRINT           reduce using rule 55 (NUMBER -> INT .)
    ID              reduce using rule 55 (NUMBER -> INT .)


state 55

    (56) NUMBER -> FLOAT .

    ADD             reduce using rule 56 (NUMBER -> FLOAT .)
    MIN             reduce using rule 56 (NUMBER -> FLOAT .)
    MUL             reduce using rule 56 (NUMBER -> FLOAT .)
    DIV             reduce using rule 56 (NUMBER -> FLOAT .)
    DOTADD          reduce using rule 56 (NUMBER -> FLOAT .)
    DOTMIN          reduce using rule 56 (NUMBER -> FLOAT .)
    DOTMUL          reduce using rule 56 (NUMBER -> FLOAT .)
    DOTDIV          reduce using rule 56 (NUMBER -> FLOAT .)
    TRANSPOSE       reduce using rule 56 (NUMBER -> FLOAT .)
    LT              reduce using rule 56 (NUMBER -> FLOAT .)
    GT              reduce using rule 56 (NUMBER -> FLOAT .)
    LTE             reduce using rule 56 (NUMBER -> FLOAT .)
    GTE             reduce using rule 56 (NUMBER -> FLOAT .)
    NE              reduce using rule 56 (NUMBER -> FLOAT .)
    RELASSIGN       reduce using rule 56 (NUMBER -> FLOAT .)
    ;               reduce using rule 56 (NUMBER -> FLOAT .)
    ,               reduce using rule 56 (NUMBER -> FLOAT .)
    ]               reduce using rule 56 (NUMBER -> FLOAT .)
    :               reduce using rule 56 (NUMBER -> FLOAT .)
    )               reduce using rule 56 (NUMBER -> FLOAT .)
    {               reduce using rule 56 (NUMBER -> FLOAT .)
    IF              reduce using rule 56 (NUMBER -> FLOAT .)
    FOR             reduce using rule 56 (NUMBER -> FLOAT .)
    WHILE           reduce using rule 56 (NUMBER -> FLOAT .)
    BREAK           reduce using rule 56 (NUMBER -> FLOAT .)
    CONTINUE        reduce using rule 56 (NUMBER -> FLOAT .)
    RETURN          reduce using rule 56 (NUMBER -> FLOAT .)
    PRINT           reduce using rule 56 (NUMBER -> FLOAT .)
    ID              reduce using rule 56 (NUMBER -> FLOAT .)


state 56

    (70) print -> PRINT MULTIPLE_EXPR .
    (66) MULTIPLE_EXPR -> MULTIPLE_EXPR . , EXPRESSION

    ;               reduce using rule 70 (print -> PRINT MULTIPLE_EXPR .)
    ,               shift and go to state 93


state 57

    (67) MULTIPLE_EXPR -> EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ,               reduce using rule 67 (MULTIPLE_EXPR -> EXPRESSION .)
    ;               reduce using rule 67 (MULTIPLE_EXPR -> EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 58

    (31) assign -> REF ASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    REF                            shift and go to state 46
    EXPRESSION                     shift and go to state 94
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    NUMBER                         shift and go to state 47

state 59

    (6) block -> { instructions } .

    {               reduce using rule 6 (block -> { instructions } .)
    IF              reduce using rule 6 (block -> { instructions } .)
    FOR             reduce using rule 6 (block -> { instructions } .)
    WHILE           reduce using rule 6 (block -> { instructions } .)
    BREAK           reduce using rule 6 (block -> { instructions } .)
    CONTINUE        reduce using rule 6 (block -> { instructions } .)
    RETURN          reduce using rule 6 (block -> { instructions } .)
    PRINT           reduce using rule 6 (block -> { instructions } .)
    ID              reduce using rule 6 (block -> { instructions } .)
    $end            reduce using rule 6 (block -> { instructions } .)
    }               reduce using rule 6 (block -> { instructions } .)
    ELSE            reduce using rule 6 (block -> { instructions } .)


state 60

    (16) if -> IF BOOLEAN_IN_PARENTHESES instruction .
    (17) if -> IF BOOLEAN_IN_PARENTHESES instruction . ELSE instruction

    {               reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    IF              reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    FOR             reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    WHILE           reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    BREAK           reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    CONTINUE        reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    RETURN          reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    PRINT           reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    ID              reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    $end            reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    }               reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .)
    ELSE            shift and go to state 95

  ! ELSE            [ reduce using rule 16 (if -> IF BOOLEAN_IN_PARENTHESES instruction .) ]


state 61

    (65) BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION . )

    )               shift and go to state 96


state 62

    (33) BOOLEAN_EXPRESSION -> EXPRESSION . LT EXPRESSION
    (34) BOOLEAN_EXPRESSION -> EXPRESSION . GT EXPRESSION
    (35) BOOLEAN_EXPRESSION -> EXPRESSION . LTE EXPRESSION
    (36) BOOLEAN_EXPRESSION -> EXPRESSION . GTE EXPRESSION
    (37) BOOLEAN_EXPRESSION -> EXPRESSION . NE EXPRESSION
    (38) BOOLEAN_EXPRESSION -> EXPRESSION . RELASSIGN EXPRESSION
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    LT              shift and go to state 80
    GT              shift and go to state 81
    LTE             shift and go to state 82
    GTE             shift and go to state 83
    NE              shift and go to state 84
    RELASSIGN       shift and go to state 85
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 63

    (18) for -> FOR ID ASSIGN . RANGE instruction
    (19) RANGE -> . EXPRESSION : EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    RANGE                          shift and go to state 97
    EXPRESSION                     shift and go to state 98
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 64

    (26) assign -> ID ASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 26 (assign -> ID ASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 65

    (27) assign -> ID ADDASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 27 (assign -> ID ADDASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 66

    (28) assign -> ID MINASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 28 (assign -> ID MINASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 67

    (29) assign -> ID MULASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 29 (assign -> ID MULASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 68

    (30) assign -> ID DIVASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 30 (assign -> ID DIVASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 69

    (32) REF -> ID [ EXPRESSION . , EXPRESSION ]
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ,               shift and go to state 99
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 70

    (20) while -> WHILE BOOLEAN_IN_PARENTHESES instruction .

    {               reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    IF              reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    FOR             reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    WHILE           reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    BREAK           reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    CONTINUE        reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    RETURN          reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    PRINT           reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    ID              reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    $end            reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    }               reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)
    ELSE            reduce using rule 20 (while -> WHILE BOOLEAN_IN_PARENTHESES instruction .)


state 71

    (39) EXPRESSION -> EXPRESSION ADD . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 100
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 72

    (40) EXPRESSION -> EXPRESSION MIN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 101
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 73

    (41) EXPRESSION -> EXPRESSION MUL . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 102
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 74

    (42) EXPRESSION -> EXPRESSION DIV . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 103
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 75

    (43) EXPRESSION -> EXPRESSION DOTADD . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 104
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 76

    (44) EXPRESSION -> EXPRESSION DOTMIN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 105
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 77

    (45) EXPRESSION -> EXPRESSION DOTMUL . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 106
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 78

    (46) EXPRESSION -> EXPRESSION DOTDIV . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 107
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 79

    (48) EXPRESSION -> EXPRESSION TRANSPOSE .

    ADD             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    MIN             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    MUL             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    DIV             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    DOTADD          reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    DOTMIN          reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    DOTMUL          reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    DOTDIV          reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    TRANSPOSE       reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    LT              reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    GT              reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    LTE             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    GTE             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    NE              reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    RELASSIGN       reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    ;               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    ,               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    ]               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    :               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    )               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    {               reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    IF              reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    FOR             reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    WHILE           reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    BREAK           reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    CONTINUE        reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    RETURN          reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    PRINT           reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)
    ID              reduce using rule 48 (EXPRESSION -> EXPRESSION TRANSPOSE .)


state 80

    (33) BOOLEAN_EXPRESSION -> EXPRESSION LT . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 108
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 81

    (34) BOOLEAN_EXPRESSION -> EXPRESSION GT . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 109
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 82

    (35) BOOLEAN_EXPRESSION -> EXPRESSION LTE . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 110
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 83

    (36) BOOLEAN_EXPRESSION -> EXPRESSION GTE . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 111
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 84

    (37) BOOLEAN_EXPRESSION -> EXPRESSION NE . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 112
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 85

    (38) BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 113
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 86

    (47) EXPRESSION -> MIN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    MIN             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    MUL             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    DIV             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    DOTADD          reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    DOTMIN          reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    DOTMUL          reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    DOTDIV          reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    TRANSPOSE       reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    LT              reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    GT              reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    LTE             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    GTE             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    NE              reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    RELASSIGN       reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    ;               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    ,               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    ]               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    :               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    )               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    {               reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    IF              reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    FOR             reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    WHILE           reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    BREAK           reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    CONTINUE        reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    RETURN          reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    PRINT           reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)
    ID              reduce using rule 47 (EXPRESSION -> MIN EXPRESSION .)

  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! MUL             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 77 ]
  ! DOTDIV          [ shift and go to state 78 ]
  ! TRANSPOSE       [ shift and go to state 79 ]


state 87

    (57) MATRIX -> [ ROWS . ]
    (58) ROWS -> ROWS . ; ROW

    ]               shift and go to state 114
    ;               shift and go to state 115


state 88

    (59) ROWS -> ROW .
    (60) ROW -> ROW . , EXPRESSION

    ]               reduce using rule 59 (ROWS -> ROW .)
    ;               reduce using rule 59 (ROWS -> ROW .)
    ,               shift and go to state 116


state 89

    (61) ROW -> EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ,               reduce using rule 61 (ROW -> EXPRESSION .)
    ]               reduce using rule 61 (ROW -> EXPRESSION .)
    ;               reduce using rule 61 (ROW -> EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 90

    (62) MATRIX_FUNCTIONS -> EYE ( . MATRIX_FUNCTIONS_EXPRESSION )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> . MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION
    (69) MATRIX_FUNCTIONS_EXPRESSION -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    MATRIX_FUNCTIONS_EXPRESSION    shift and go to state 117
    EXPRESSION                     shift and go to state 118
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 91

    (63) MATRIX_FUNCTIONS -> ZEROS ( . MATRIX_FUNCTIONS_EXPRESSION )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> . MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION
    (69) MATRIX_FUNCTIONS_EXPRESSION -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    MATRIX_FUNCTIONS_EXPRESSION    shift and go to state 119
    EXPRESSION                     shift and go to state 118
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 92

    (64) MATRIX_FUNCTIONS -> ONES ( . MATRIX_FUNCTIONS_EXPRESSION )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> . MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION
    (69) MATRIX_FUNCTIONS_EXPRESSION -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    MATRIX_FUNCTIONS_EXPRESSION    shift and go to state 120
    EXPRESSION                     shift and go to state 118
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 93

    (66) MULTIPLE_EXPR -> MULTIPLE_EXPR , . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 121
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 94

    (31) assign -> REF ASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 31 (assign -> REF ASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 95

    (17) if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 122
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 96

    (65) BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .

    {               reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    IF              reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    FOR             reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    WHILE           reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    BREAK           reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    CONTINUE        reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    RETURN          reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    PRINT           reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)
    ID              reduce using rule 65 (BOOLEAN_IN_PARENTHESES -> ( BOOLEAN_EXPRESSION ) .)


state 97

    (18) for -> FOR ID ASSIGN RANGE . instruction
    (7) instruction -> . block
    (8) instruction -> . if
    (9) instruction -> . for
    (10) instruction -> . while
    (11) instruction -> . break ;
    (12) instruction -> . continue ;
    (13) instruction -> . return ;
    (14) instruction -> . print ;
    (15) instruction -> . assign ;
    (6) block -> . { instructions }
    (16) if -> . IF BOOLEAN_IN_PARENTHESES instruction
    (17) if -> . IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction
    (18) for -> . FOR ID ASSIGN RANGE instruction
    (20) while -> . WHILE BOOLEAN_IN_PARENTHESES instruction
    (21) break -> . BREAK
    (22) continue -> . CONTINUE
    (23) return -> . RETURN
    (24) return -> . RETURN EXPRESSION
    (25) return -> . RETURN BOOLEAN_EXPRESSION
    (70) print -> . PRINT MULTIPLE_EXPR
    (26) assign -> . ID ASSIGN EXPRESSION
    (27) assign -> . ID ADDASSIGN EXPRESSION
    (28) assign -> . ID MINASSIGN EXPRESSION
    (29) assign -> . ID MULASSIGN EXPRESSION
    (30) assign -> . ID DIVASSIGN EXPRESSION
    (31) assign -> . REF ASSIGN EXPRESSION
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]

    {               shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 123
    block                          shift and go to state 5
    if                             shift and go to state 6
    for                            shift and go to state 7
    while                          shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    return                         shift and go to state 11
    print                          shift and go to state 12
    assign                         shift and go to state 13
    REF                            shift and go to state 23

state 98

    (19) RANGE -> EXPRESSION . : EXPRESSION
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    :               shift and go to state 124
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 99

    (32) REF -> ID [ EXPRESSION , . EXPRESSION ]
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 125
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 100

    (39) EXPRESSION -> EXPRESSION ADD EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    MIN             reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    DOTADD          reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    DOTMIN          reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    LT              reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    GT              reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    LTE             reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    GTE             reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    NE              reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    RELASSIGN       reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    ;               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    ,               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    ]               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    :               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    )               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    {               reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    IF              reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    FOR             reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    WHILE           reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    BREAK           reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    CONTINUE        reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    RETURN          reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    PRINT           reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    ID              reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79

  ! MUL             [ reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .) ]
  ! DIV             [ reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .) ]
  ! DOTMUL          [ reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .) ]
  ! TRANSPOSE       [ reduce using rule 39 (EXPRESSION -> EXPRESSION ADD EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]


state 101

    (40) EXPRESSION -> EXPRESSION MIN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    MIN             reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    DOTADD          reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    DOTMIN          reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    LT              reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    GT              reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    LTE             reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    GTE             reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    NE              reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    RELASSIGN       reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    ;               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    ,               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    ]               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    :               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    )               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    {               reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    IF              reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    FOR             reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    WHILE           reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    BREAK           reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    CONTINUE        reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    RETURN          reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    PRINT           reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    ID              reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79

  ! MUL             [ reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .) ]
  ! DIV             [ reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .) ]
  ! DOTMUL          [ reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .) ]
  ! TRANSPOSE       [ reduce using rule 40 (EXPRESSION -> EXPRESSION MIN EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]


state 102

    (41) EXPRESSION -> EXPRESSION MUL EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    MIN             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    MUL             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DIV             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DOTADD          reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DOTMIN          reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DOTMUL          reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DOTDIV          reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    LT              reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    GT              reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    LTE             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    GTE             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    NE              reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    RELASSIGN       reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    ;               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    ,               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    ]               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    :               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    )               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    {               reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    IF              reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    FOR             reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    WHILE           reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    BREAK           reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    CONTINUE        reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    RETURN          reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    PRINT           reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    ID              reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    TRANSPOSE       shift and go to state 79

  ! TRANSPOSE       [ reduce using rule 41 (EXPRESSION -> EXPRESSION MUL EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! MUL             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 77 ]
  ! DOTDIV          [ shift and go to state 78 ]


state 103

    (42) EXPRESSION -> EXPRESSION DIV EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    MIN             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    MUL             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    DIV             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    DOTADD          reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    DOTMIN          reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    DOTMUL          reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    DOTDIV          reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    LT              reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    GT              reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    LTE             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    GTE             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    NE              reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    RELASSIGN       reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    ;               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    ,               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    ]               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    :               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    )               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    {               reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    IF              reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    FOR             reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    WHILE           reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    BREAK           reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    CONTINUE        reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    RETURN          reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    PRINT           reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    ID              reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .)
    TRANSPOSE       shift and go to state 79

  ! TRANSPOSE       [ reduce using rule 42 (EXPRESSION -> EXPRESSION DIV EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! MUL             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 77 ]
  ! DOTDIV          [ shift and go to state 78 ]


state 104

    (43) EXPRESSION -> EXPRESSION DOTADD EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    MIN             reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    DOTADD          reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    DOTMIN          reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    LT              reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    GT              reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    LTE             reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    GTE             reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    NE              reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    RELASSIGN       reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    ;               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    ,               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    ]               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    :               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    )               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    {               reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    IF              reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    FOR             reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    WHILE           reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    BREAK           reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    CONTINUE        reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    RETURN          reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    PRINT           reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    ID              reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79

  ! MUL             [ reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .) ]
  ! DIV             [ reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .) ]
  ! DOTMUL          [ reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .) ]
  ! TRANSPOSE       [ reduce using rule 43 (EXPRESSION -> EXPRESSION DOTADD EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]


state 105

    (44) EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    MIN             reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    DOTADD          reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    DOTMIN          reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    LT              reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    GT              reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    LTE             reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    GTE             reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    NE              reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    RELASSIGN       reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    ;               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    ,               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    ]               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    :               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    )               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    {               reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    IF              reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    FOR             reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    WHILE           reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    BREAK           reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    CONTINUE        reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    RETURN          reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    PRINT           reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    ID              reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79

  ! MUL             [ reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .) ]
  ! DIV             [ reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .) ]
  ! DOTMUL          [ reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .) ]
  ! TRANSPOSE       [ reduce using rule 44 (EXPRESSION -> EXPRESSION DOTMIN EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]


state 106

    (45) EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    MIN             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    MUL             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    DIV             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    DOTADD          reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    DOTMIN          reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    DOTMUL          reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    DOTDIV          reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    LT              reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    GT              reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    LTE             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    GTE             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    NE              reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    RELASSIGN       reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    ;               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    ,               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    ]               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    :               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    )               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    {               reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    IF              reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    FOR             reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    WHILE           reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    BREAK           reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    CONTINUE        reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    RETURN          reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    PRINT           reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    ID              reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .)
    TRANSPOSE       shift and go to state 79

  ! TRANSPOSE       [ reduce using rule 45 (EXPRESSION -> EXPRESSION DOTMUL EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! MUL             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 77 ]
  ! DOTDIV          [ shift and go to state 78 ]


state 107

    (46) EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ADD             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    MIN             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    MUL             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DIV             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DOTADD          reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DOTMIN          reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DOTMUL          reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DOTDIV          reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    LT              reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    GT              reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    LTE             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    GTE             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    NE              reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    RELASSIGN       reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    ;               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    ,               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    ]               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    :               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    )               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    {               reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    IF              reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    FOR             reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    WHILE           reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    BREAK           reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    CONTINUE        reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    RETURN          reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    PRINT           reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    ID              reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    TRANSPOSE       shift and go to state 79

  ! TRANSPOSE       [ reduce using rule 46 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .) ]
  ! ADD             [ shift and go to state 71 ]
  ! MIN             [ shift and go to state 72 ]
  ! MUL             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTMIN          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 77 ]
  ! DOTDIV          [ shift and go to state 78 ]


state 108

    (33) BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 33 (BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION .)
    )               reduce using rule 33 (BOOLEAN_EXPRESSION -> EXPRESSION LT EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 109

    (34) BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 34 (BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION .)
    )               reduce using rule 34 (BOOLEAN_EXPRESSION -> EXPRESSION GT EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 110

    (35) BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 35 (BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION .)
    )               reduce using rule 35 (BOOLEAN_EXPRESSION -> EXPRESSION LTE EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 111

    (36) BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 36 (BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION .)
    )               reduce using rule 36 (BOOLEAN_EXPRESSION -> EXPRESSION GTE EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 112

    (37) BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 37 (BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION .)
    )               reduce using rule 37 (BOOLEAN_EXPRESSION -> EXPRESSION NE EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 113

    (38) BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ;               reduce using rule 38 (BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION .)
    )               reduce using rule 38 (BOOLEAN_EXPRESSION -> EXPRESSION RELASSIGN EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 114

    (57) MATRIX -> [ ROWS ] .

    ADD             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    MIN             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    MUL             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    DIV             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    DOTADD          reduce using rule 57 (MATRIX -> [ ROWS ] .)
    DOTMIN          reduce using rule 57 (MATRIX -> [ ROWS ] .)
    DOTMUL          reduce using rule 57 (MATRIX -> [ ROWS ] .)
    DOTDIV          reduce using rule 57 (MATRIX -> [ ROWS ] .)
    TRANSPOSE       reduce using rule 57 (MATRIX -> [ ROWS ] .)
    LT              reduce using rule 57 (MATRIX -> [ ROWS ] .)
    GT              reduce using rule 57 (MATRIX -> [ ROWS ] .)
    LTE             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    GTE             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    NE              reduce using rule 57 (MATRIX -> [ ROWS ] .)
    RELASSIGN       reduce using rule 57 (MATRIX -> [ ROWS ] .)
    ;               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    ,               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    ]               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    :               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    )               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    {               reduce using rule 57 (MATRIX -> [ ROWS ] .)
    IF              reduce using rule 57 (MATRIX -> [ ROWS ] .)
    FOR             reduce using rule 57 (MATRIX -> [ ROWS ] .)
    WHILE           reduce using rule 57 (MATRIX -> [ ROWS ] .)
    BREAK           reduce using rule 57 (MATRIX -> [ ROWS ] .)
    CONTINUE        reduce using rule 57 (MATRIX -> [ ROWS ] .)
    RETURN          reduce using rule 57 (MATRIX -> [ ROWS ] .)
    PRINT           reduce using rule 57 (MATRIX -> [ ROWS ] .)
    ID              reduce using rule 57 (MATRIX -> [ ROWS ] .)


state 115

    (58) ROWS -> ROWS ; . ROW
    (60) ROW -> . ROW , EXPRESSION
    (61) ROW -> . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    ROW                            shift and go to state 126
    EXPRESSION                     shift and go to state 89
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 116

    (60) ROW -> ROW , . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 127
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 117

    (62) MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION . )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION . , EXPRESSION

    )               shift and go to state 128
    ,               shift and go to state 129


state 118

    (69) MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    )               reduce using rule 69 (MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION .)
    ,               reduce using rule 69 (MATRIX_FUNCTIONS_EXPRESSION -> EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 119

    (63) MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION . )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION . , EXPRESSION

    )               shift and go to state 130
    ,               shift and go to state 129


state 120

    (64) MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION . )
    (68) MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION . , EXPRESSION

    )               shift and go to state 131
    ,               shift and go to state 129


state 121

    (66) MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ,               reduce using rule 66 (MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION .)
    ;               reduce using rule 66 (MULTIPLE_EXPR -> MULTIPLE_EXPR , EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 122

    (17) if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .

    {               reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    IF              reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    FOR             reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    WHILE           reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    BREAK           reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    CONTINUE        reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    RETURN          reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    PRINT           reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    ID              reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    $end            reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    }               reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)
    ELSE            reduce using rule 17 (if -> IF BOOLEAN_IN_PARENTHESES instruction ELSE instruction .)


state 123

    (18) for -> FOR ID ASSIGN RANGE instruction .

    {               reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    IF              reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    FOR             reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    WHILE           reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    BREAK           reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    CONTINUE        reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    RETURN          reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    PRINT           reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    ID              reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    $end            reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    }               reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)
    ELSE            reduce using rule 18 (for -> FOR ID ASSIGN RANGE instruction .)


state 124

    (19) RANGE -> EXPRESSION : . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 132
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 125

    (32) REF -> ID [ EXPRESSION , EXPRESSION . ]
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ]               shift and go to state 133
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 126

    (58) ROWS -> ROWS ; ROW .
    (60) ROW -> ROW . , EXPRESSION

    ]               reduce using rule 58 (ROWS -> ROWS ; ROW .)
    ;               reduce using rule 58 (ROWS -> ROWS ; ROW .)
    ,               shift and go to state 116


state 127

    (60) ROW -> ROW , EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    ,               reduce using rule 60 (ROW -> ROW , EXPRESSION .)
    ]               reduce using rule 60 (ROW -> ROW , EXPRESSION .)
    ;               reduce using rule 60 (ROW -> ROW , EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 128

    (62) MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .

    ADD             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MIN             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MUL             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DIV             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTADD          reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMIN          reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMUL          reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTDIV          reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    TRANSPOSE       reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LT              reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GT              reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LTE             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GTE             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    NE              reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RELASSIGN       reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ;               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ,               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ]               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    :               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    )               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    {               reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    IF              reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    FOR             reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    WHILE           reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    BREAK           reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    CONTINUE        reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RETURN          reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    PRINT           reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ID              reduce using rule 62 (MATRIX_FUNCTIONS -> EYE ( MATRIX_FUNCTIONS_EXPRESSION ) .)


state 129

    (68) MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , . EXPRESSION
    (39) EXPRESSION -> . EXPRESSION ADD EXPRESSION
    (40) EXPRESSION -> . EXPRESSION MIN EXPRESSION
    (41) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (42) EXPRESSION -> . EXPRESSION DIV EXPRESSION
    (43) EXPRESSION -> . EXPRESSION DOTADD EXPRESSION
    (44) EXPRESSION -> . EXPRESSION DOTMIN EXPRESSION
    (45) EXPRESSION -> . EXPRESSION DOTMUL EXPRESSION
    (46) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (47) EXPRESSION -> . MIN EXPRESSION
    (48) EXPRESSION -> . EXPRESSION TRANSPOSE
    (49) EXPRESSION -> . MATRIX
    (50) EXPRESSION -> . MATRIX_FUNCTIONS
    (51) EXPRESSION -> . REF
    (52) EXPRESSION -> . NUMBER
    (53) EXPRESSION -> . STR
    (54) EXPRESSION -> . ID
    (57) MATRIX -> . [ ROWS ]
    (62) MATRIX_FUNCTIONS -> . EYE ( MATRIX_FUNCTIONS_EXPRESSION )
    (63) MATRIX_FUNCTIONS -> . ZEROS ( MATRIX_FUNCTIONS_EXPRESSION )
    (64) MATRIX_FUNCTIONS -> . ONES ( MATRIX_FUNCTIONS_EXPRESSION )
    (32) REF -> . ID [ EXPRESSION , EXPRESSION ]
    (55) NUMBER -> . INT
    (56) NUMBER -> . FLOAT

    MIN             shift and go to state 43
    STR             shift and go to state 48
    ID              shift and go to state 49
    [               shift and go to state 50
    EYE             shift and go to state 51
    ZEROS           shift and go to state 52
    ONES            shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    EXPRESSION                     shift and go to state 134
    MATRIX                         shift and go to state 44
    MATRIX_FUNCTIONS               shift and go to state 45
    REF                            shift and go to state 46
    NUMBER                         shift and go to state 47

state 130

    (63) MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .

    ADD             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MIN             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MUL             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DIV             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTADD          reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMIN          reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMUL          reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTDIV          reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    TRANSPOSE       reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LT              reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GT              reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LTE             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GTE             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    NE              reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RELASSIGN       reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ;               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ,               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ]               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    :               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    )               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    {               reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    IF              reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    FOR             reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    WHILE           reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    BREAK           reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    CONTINUE        reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RETURN          reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    PRINT           reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ID              reduce using rule 63 (MATRIX_FUNCTIONS -> ZEROS ( MATRIX_FUNCTIONS_EXPRESSION ) .)


state 131

    (64) MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .

    ADD             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MIN             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    MUL             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DIV             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTADD          reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMIN          reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTMUL          reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    DOTDIV          reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    TRANSPOSE       reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LT              reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GT              reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    LTE             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    GTE             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    NE              reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RELASSIGN       reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ;               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ,               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ]               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    :               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    )               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    {               reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    IF              reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    FOR             reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    WHILE           reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    BREAK           reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    CONTINUE        reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    RETURN          reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    PRINT           reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)
    ID              reduce using rule 64 (MATRIX_FUNCTIONS -> ONES ( MATRIX_FUNCTIONS_EXPRESSION ) .)


state 132

    (19) RANGE -> EXPRESSION : EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    {               reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    IF              reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    FOR             reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    WHILE           reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    BREAK           reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    CONTINUE        reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    RETURN          reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    PRINT           reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    ID              reduce using rule 19 (RANGE -> EXPRESSION : EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79


state 133

    (32) REF -> ID [ EXPRESSION , EXPRESSION ] .

    ASSIGN          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    ADD             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    MIN             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    MUL             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    DIV             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    DOTADD          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    DOTMIN          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    DOTMUL          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    DOTDIV          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    TRANSPOSE       reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    LT              reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    GT              reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    LTE             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    GTE             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    NE              reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    RELASSIGN       reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    ;               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    ,               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    ]               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    :               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    )               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    {               reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    IF              reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    FOR             reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    WHILE           reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    BREAK           reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    CONTINUE        reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    RETURN          reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    PRINT           reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)
    ID              reduce using rule 32 (REF -> ID [ EXPRESSION , EXPRESSION ] .)


state 134

    (68) MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION .
    (39) EXPRESSION -> EXPRESSION . ADD EXPRESSION
    (40) EXPRESSION -> EXPRESSION . MIN EXPRESSION
    (41) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (42) EXPRESSION -> EXPRESSION . DIV EXPRESSION
    (43) EXPRESSION -> EXPRESSION . DOTADD EXPRESSION
    (44) EXPRESSION -> EXPRESSION . DOTMIN EXPRESSION
    (45) EXPRESSION -> EXPRESSION . DOTMUL EXPRESSION
    (46) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION
    (48) EXPRESSION -> EXPRESSION . TRANSPOSE

    )               reduce using rule 68 (MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION .)
    ,               reduce using rule 68 (MATRIX_FUNCTIONS_EXPRESSION -> MATRIX_FUNCTIONS_EXPRESSION , EXPRESSION .)
    ADD             shift and go to state 71
    MIN             shift and go to state 72
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    DOTADD          shift and go to state 75
    DOTMIN          shift and go to state 76
    DOTMUL          shift and go to state 77
    DOTDIV          shift and go to state 78
    TRANSPOSE       shift and go to state 79

